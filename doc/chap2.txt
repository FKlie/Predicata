  
  [1X2 [33X[0;0YCreating Predicata[133X[101X
  
  
  [1X2.1 [33X[0;0YPredicaton â€“ an extended finite automaton[133X[101X
  
  [1X2.1-1 Predicaton[101X
  
  [33X[1;0Y[29X[2XPredicaton[102X( [3XAutomaton[103X, [3XVariablePositionList[103X ) [32X function[133X
  
  [33X[0;0YA  [10XPredicaton[110X  represents  a  first-order  formulas,  with [22Xn[122X free variables,
  containing  the  nullary  operations  [22X0[122X and [22X1[122X and the binary operation [22X+[122X. It
  consists of an [10XAutomaton[110X and a [10XVariablePositionList[110X.[133X
  
  [33X[0;0YThe  first  parameter  is  an  [3XAutomaton[103X from the package [5XAutomata[105X, which is
  created   as   follows:  [10XAutomaton(Type,  Size,  Alphabet,  TransitionTable,
  Initial,  Final)[110X.  In  order  to create a [10XPredicaton[110X the [3XType[103X must either be
  [10X"det"[110X  or  [10X"nondet"[110X.  The  [3XSize[103X  is  a positive integer giving the number of
  states.  The  [3XAlphabet[103X  must  be  a list of length [22X2^n[122X, i.e. the list of all
  n-tuples [22X{0,1}^n[122X. The [3XTransitionTable[103X gives the transition matrix, where the
  entry at [22X(i,j)[122X denotes the state reached with the [22Xi[122X-th letter ([22Xi[122X-th row) and
  the  [22Xj[122X-th  state  ([22Xj[122X-th  column).  The [3XInitial[103X and [3XFinal[103X are the initial and
  final state sets.[133X
  
  [33X[0;0YThe  second  parameter  [3XVariablePositionList[103X  must  be  of length [22Xn[122X and must
  contain  [22Xn[122X pairwise distinct positive integers. It internally represents the
  occurring  variables  in  the  first-order  formula  by  assigning  pairwise
  distinct  natural  numbers  to  each free variable. The [3XVariablePositionList[103X
  coincides  with  the  letters,  i.e.  the  [22Xi[122X-th  position  in  the  [22Xn[122X-tuples
  correspond to the variable position at the [22Xi[122X-th position in the list.[133X
  
  [33X[0;0YA  word  over  the  alphabet  [22X{0,1}^n[122X  can  be turned into [22Xn[122X reversed binary
  representations  of  natural  numbers  by  extracting  the components of the
  letters. The [22Xi[122X-th row of a word (choosing the [22Xi[122X-th component of each letter)
  corresponds  to  the  [22Xi[122X-th  entry  in the [3XVariablePositionList[103X. The accepted
  words  of  the  automaton  represent those [22Xn[122X natural numbers, such that upon
  interpretation the first-order formula is satisfied.[133X
  
  [33X[0;0YIn  the  following example the [10XAutomaton A[110X represents the formula [22Xx+y=z[122X with
  the  following variables: the variable [22Xx[122X is assigned to [22X1[122X, the variable [22Xy[122X is
  assigned  to  [22X2[122X  and  the  variable  [22Xz[122X  is assigned to [22X3[122X The [10XPredicaton P[110X is
  created  with the deterministic finite automaton [10XA[110X and the variable position
  list  [10X[  1, 2, 3 ][110X. This means the first entry in the letters corresponds to
  the variable with the assigned natural number 1, i.e. [22Xx[122X, the second entry to
  the  number [22X2[122X, i.e. the variable [22Xy[122X and the third entry to the number [22X3[122X, i.e.
  the variable [22Xz[122X.[133X
  
  [33X[0;0YLater  also  a  mathematically  more  intuitive  method  is  introduced, see
  [2XPredicaton[102X ([14X4.1-3[114X) for creating a [10XPredicaton[110X from a first-order formula.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 3,[127X[104X
    [4X[25X>[125X [27X[ [ 0, 0, 0 ], [ 1, 0, 0 ], [ 0, 1, 0 ], [ 1, 1, 0 ],[127X[104X
    [4X[25X>[125X [27X[ 0, 0, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 1, 3 ], [ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]);[127X[104X
    [4X[28X< deterministic automaton on 8 letters with 3 states >[128X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton( A, [ 1, 2, 3 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 8 letters with 3 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3 ]. >[128X[104X
  [4X[32X[104X
  
  [1X2.1-2 BuildPredicaton[101X
  
  [33X[1;0Y[29X[2XBuildPredicaton[102X( [3XType[103X, [3XSize[103X, [3XAlphabet[103X, [3XTransitionTable[103X, [3XInitial[103X, [3XFinal[103X, [3XVariablePositionList[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XBuildPredicaton[110X  allows  the creation of a [10XPredicaton[110X without
  specifying an [10XAutomaton[110X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=BuildPredicaton("det", 3, [ [ 0, 0, 0 ], [ 1, 0, 0 ], [ 0, 1, 0 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 1, 0 ], [ 0, 0, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ], [ 1, 2, 3 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 8 letters with 3 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3 ]. >[128X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.1-3 IsPredicaton[101X
  
  [33X[1;0Y[29X[2XIsPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XIsPredicaton[110X checks if [3XP[103X is a [10XPredicaton[110X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=BuildPredicaton("det", 2, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 2 ], [ 2, 2 ], [ 2, 2 ], [ 1, 2 ] ], [ 1 ], [ 1 ], [ 1, 2 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 4 letters with 2 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2 ]. >[128X[104X
    [4X[25Xgap>[125X [27XIsPredicaton(P);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.1-4 Display[101X
  
  [33X[1;0Y[29X[2XDisplay[102X( [3XP[103X ) [32X method[133X
  
  [33X[0;0YThe method [10XDisplay[110X prints the transition table of the [10XPredicaton[110X [3XP[103X. The left
  side  are  the  letters  of the alphabet, the top row are the states and the
  transition  from  the [22Xi[122X-th letter (row) and [22Xj[122X-th state (column) is the entry
  [22X(i,j)[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0, 0, 0 ], [ 1, 0, 0 ], [ 0, 1, 0 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 1, 0 ], [ 0, 0, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]), [ 1, 2, 3 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 8 letters with 3 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3 ]. >[128X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.1-5 View[101X
  
  [33X[1;0Y[29X[2XView[102X( [3XP[103X ) [32X method[133X
  
  [33X[0;0YThe method [10XView[110X applied on a [10XPredicaton[110X [3XP[103X returns the object text.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 2, 2 ] ], [ 1 ], [ 3 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XView(P);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 2 letters with 3 states [128X[104X
    [4X[28Xand the variable position list [ 1 ]. >[128X[104X
  [4X[32X[104X
  
  [1X2.1-6 Print[101X
  
  [33X[1;0Y[29X[2XPrint[102X( [3XP[103X ) [32X method[133X
  
  [33X[0;0YThe method [10XPrint[110X applied on a [10XPredicaton[110X [3XP[103X prints the input as a string.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]), [127X[104X
    [4X[25X>[125X [27X[ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XPrint(P);[127X[104X
    [4X[28XPredicaton(Automaton("det", 3, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [ [ \[128X[104X
    [4X[28X1, 3, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]), [ 1, 2 ]);;[128X[104X
    [4X[25Xgap>[125X [27XString(P);[127X[104X
    [4X[28X"Predicaton(Automaton(\"det\", 3, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [ [\[128X[104X
    [4X[28X1, 3, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]), [ 1, 2 ]);;"[128X[104X
  [4X[32X[104X
  
  [1X2.1-7 GetAlphabet[101X
  
  [33X[1;0Y[29X[2XGetAlphabet[102X( [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XGetAlphabet[110X returns the alphabet [22XA^n[122X for [22XA:={0,1}[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xa1:=GetAlphabet(3);[127X[104X
    [4X[28X[ [ 0, 0, 0 ], [ 1, 0, 0 ], [ 0, 1, 0 ], [ 1, 1, 0 ], [128X[104X
    [4X[28X  [ 0, 0, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27XP1:=Predicaton(Automaton("det", 3, a1,[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]), [ 1, 2, 3 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P1);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27Xa2:=GetAlphabet(0);[127X[104X
    [4X[28X[ [  ] ][128X[104X
    [4X[25Xgap>[125X [27XP2:=Predicaton(Automaton("det", 1, a2, [ [ 1 ] ], [ 1 ], [ 1 ]), [ ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P2);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 1 letter with 1 state, [128X[104X
    [4X[28Xthe variable position list [ ] and the following transitions:[128X[104X
    [4X[28X       |  1  [128X[104X
    [4X[28X-------------[128X[104X
    [4X[28X  [ ]  |  1  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  
  [1X2.2 [33X[0;0YBasic functions on Automata and Predicata[133X[101X
  
  [33X[0;0YThe  package  [5XAutomata[105X  allows lists of lists as input for the alphabet, but
  unfortunately  is  lacking  in  further support. The functions regarding the
  alphabet  takes  only  [10XShallowCopy[110X whereas a list of lists [10XStructuralCopy[110X is
  needed,  as  well  as the method [10XDisplay[110X for automata prints with some weird
  spacing.  Therefore  this  package reintroduces the basic [5XAutomata[105X functions
  with another name to ensure full control. Nevertheless all credit belongs to
  the creators of the package [5XAutomata[105X.[133X
  
  [33X[0;0YNote that the [10XPredicata[110X in the following examples corresponds to first-order
  formulas.  The  accepted natural numbers can be displayed with the functions
  from section [14X2.3[114X.[133X
  
  [33X[0;0YFurthermore,  note that the following functions can be either called with an
  [10XAutomaton[110X or a [10XPredicaton[110X.[133X
  
  [1X2.2-1 DisplayAut[101X
  
  [33X[1;0Y[29X[2XDisplayAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XDisplayAut[110X  prints  the  [10XAutomaton[110X or [10XPredicaton[110X [3XP[103X (called by
  [2XDisplay[102X ([14X2.1-4[114X)).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 4, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 3, 2, 2, 4 ], [ 2, 2, 4, 2 ], [ 2, 2, 3, 2 ], [ 3, 2, 2, 4 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 4 ]);[127X[104X
    [4X[28X< deterministic automaton on 4 letters with 4 states >[128X[104X
    [4X[25Xgap>[125X [27XDisplayAut(A);[127X[104X
    [4X[28Xdeterministic finite automaton on 4 letters with 4 states [128X[104X
    [4X[28Xand the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  3  2  2  4  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  4  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  3  2  2  4  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 4 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-2 DrawPredicaton[101X
  
  [33X[1;0Y[29X[2XDrawPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XDrawPredicaton[110X  calls  the  function  [10XDrawAutomaton[110X  from the
  package [5XAutomata[105X which uses [10Xgraphviz[110X [DEG+02], a software for drawing graphs
  developed  at AT & T Labs, that can be obtained at [7Xhttp://www.graphviz.org/[107X.
  For further details please refer to the manual of the package [5XAutomata[105X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 4, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 3, 2, 2, 4 ], [ 2, 2, 4, 2 ], [ 2, 2, 3, 2 ], [ 3, 2, 2, 4 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 4 ]);[127X[104X
    [4X[28X< deterministic automaton on 4 letters with 4 states >[128X[104X
    [4X[25Xgap>[125X [27XDisplayAut(A);[127X[104X
    [4X[28Xdeterministic finite automaton on 4 letters with 4 states [128X[104X
    [4X[28Xand the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  3  2  2  4  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  4  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  3  2  2  4  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 4 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-3 IsDeterministicAut[101X
  
  [33X[1;0Y[29X[2XIsDeterministicAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XIsDeterministicAut[110X  checks  if  the [10XType[110X of an [10XAutomaton[110X or a
  [10XPredicaton[110X [3XP[103X is [10X"det"[110X. If yes then [9Xtrue[109X, otherwise [9Xfalse[109X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [ [ 1, 2, 2, 3, 2 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 1, 2, 4 ] ], [ 5 ], [ 1 ]), [ 1 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 2 letters with 5 states [128X[104X
    [4X[28Xand the variable position list [ 1 ]. >[128X[104X
    [4X[25Xgap>[125X [27XIsDeterministicAut(P);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.2-4 IsNonDeterministicAut[101X
  
  [33X[1;0Y[29X[2XIsNonDeterministicAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XIsNonDeterministicAut[110X checks if the [10XType[110X of an [10XAutomaton[110X or a
  [10XPredicaton[110X [3XP[103X is [10X"nondet"[110X. If yes then [9Xtrue[109X, otherwise [9Xfalse[109X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("nondet", 2, [ [ 0 ], [ 1 ] ], [ [ 1  ], [  ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]), [ 1 ]);[127X[104X
    [4X[28X< Predicaton: nondeterministic finite automaton on 2 letters with 2 states [128X[104X
    [4X[28Xand the variable position list [ 1 ]. >[128X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: nondeterministic finite automaton on 2 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1      2      [128X[104X
    [4X[28X--------------------------[128X[104X
    [4X[28X  [ 0 ]  |  [ 1 ]  [ ]    [128X[104X
    [4X[28X  [ 1 ]  |  [ ]    [ ]    [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XIsNonDeterministicAut(P);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.2-5 TypeOfAut[101X
  
  [33X[1;0Y[29X[2XTypeOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XTypeOfAut[110X returns the [10XType[110X of an [10XAutomaton[110X or a [10XPredicaton[110X [3XP[103X,
  either  [10X"det"[110X,  [10X"nondet"[110X  or [10X"epsilon"[110X. Note that a [10XPredicaton[110X can only be a
  deterministic or nondeterministic finite automaton.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 2, 2, 2, 2, 5 ], [ 2, 2, 5, 2, 2 ], [ 2, 2, 2, 3, 2 ], [ 4, 2, 2, 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XTypeOfAut(P);[127X[104X
    [4X[28X"det"[128X[104X
  [4X[32X[104X
  
  [1X2.2-6 AlphabetOfAut[101X
  
  [33X[1;0Y[29X[2XAlphabetOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XAlphabetOfAut[110X returns the size of an [10XAlphabet[110X of an [10XAutomaton[110X
  or a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 2, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 2 ], [ 2, 2 ], [ 2, 2 ], [ 1, 2 ] ], [ 1 ], [ 1 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XAlphabetOfAut(P);[127X[104X
    [4X[28X4[128X[104X
  [4X[32X[104X
  
  [1X2.2-7 AlphabetOfAutAsList[101X
  
  [33X[1;0Y[29X[2XAlphabetOfAutAsList[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XAlphabetOfAutAsList[110X returns a [10XStructuralCopy[110X of the [10XAlphabet[110X of
  an [10XAutomaton[110X or a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27X# Continued [127X[104X
    [4X[25Xgap>[125X [27XAlphabetOfAutAsList(P);[127X[104X
    [4X[28X[ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ][128X[104X
  [4X[32X[104X
  
  [1X2.2-8 NumberStatesOfAut[101X
  
  [33X[1;0Y[29X[2XNumberStatesOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XNumberStatesOfAut[110X  returns  the  number  of  the [10XStates[110X of an
  [10XAutomaton[110X or a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 2, 2, 2, 2, 5 ], [ 4, 2, 5, 3, 2 ], [ 4, 2, 5, 3, 2 ], [ 2, 2, 2, 2, 2 ] ], [127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XNumberStatesOfAut(P);[127X[104X
    [4X[28X5[128X[104X
  [4X[32X[104X
  
  [1X2.2-9 SortedStatesAut[101X
  
  [33X[1;0Y[29X[2XSortedStatesAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XSortedStatesAut[110X returns the [10XAutomaton[110X or the [10XPredicaton[110X [3XP[103X with
  sorted  [10XStates[110X,  such  that the initial states have the lowest and the final
  states the highest number.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [ [ 1, 2, 2, 2, 2 ],[127X[104X
    [4X[25X>[125X [27X[ 2, 2, 1, 3, 4 ] ], [ 5 ], [ 1 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  2  2  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  1  3  4  [128X[104X
    [4X[28X Initial states: [ 5 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XS:=SortedStatesAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(S);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  2  5  [128X[104X
    [4X[28X  [ 1 ]  |  4  2  5  3  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-10 TransitionMatrixOfAut[101X
  
  [33X[1;0Y[29X[2XTransitionMatrixOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe   function   [10XTransitionMatrixOfAut[110X   returns  a  [10XStructuralCopy[110X  of  the
  [10XTransitionMatrix[110X of an [10XAutomaton[110X or a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [ [ 1, 2, 2, 2, 2 ],[127X[104X
    [4X[25X>[125X [27X[ 2, 2, 1, 3, 4 ] ], [ 5 ], [ 1 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  2  2  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  1  3  4  [128X[104X
    [4X[28X Initial states: [ 5 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XTransitionMatrixOfAut(P);[127X[104X
    [4X[28X[ [ 1, 2, 2, 2, 2 ], [ 2, 2, 1, 3, 4 ] ][128X[104X
  [4X[32X[104X
  
  [1X2.2-11 InitialStatesOfAut[101X
  
  [33X[1;0Y[29X[2XInitialStatesOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XInitialStatesOfAut[110X returns the [10XInitial[110X states of an [10XAutomaton[110X
  or a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 2, 3, 5 ], [127X[104X
    [4X[25X>[125X [27X[ 4, 2, 5, 2, 2 ] ], [ 1 ], [ 5 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XInitialStatesOfAut(P);[127X[104X
    [4X[28X[ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-12 SetInitialStatesOfAut[101X
  
  [33X[1;0Y[29X[2XSetInitialStatesOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XSetInitialStatesOfAut[110X sets the [10XInitial[110X states of an [10XAutomaton[110X
  or a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 2, 3, 5 ],[127X[104X
    [4X[25X>[125X [27X[ 4, 2, 5, 2, 2 ] ], [ 1 ], [ 5 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  3  5  [128X[104X
    [4X[28X  [ 1 ]  |  4  2  5  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XSetInitialStatesOfAut(P, 3);[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  3  5  [128X[104X
    [4X[28X  [ 1 ]  |  4  2  5  2  2  [128X[104X
    [4X[28X Initial states: [ 3 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-13 FinalStatesOfAut[101X
  
  [33X[1;0Y[29X[2XFinalStatesOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XFinalStatesOfAut[110X returns the [10XFinal[110X states of an [10XAutomaton[110X or a
  [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 4, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 2, 4 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 2, 4, 2 ] ], [ 1 ], [ 4 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  4  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  4  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 4 ][128X[104X
    [4X[25Xgap>[125X [27XFinalStatesOfAut(P);[127X[104X
    [4X[28X[ 4 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-14 SetFinalStatesOfAut[101X
  
  [33X[1;0Y[29X[2XSetFinalStatesOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XSetFinalStatesOfAut[110X sets the [10XFinal[110X states of an [10XAutomaton[110X or a
  [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 4, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 2, 4 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 2, 4, 2 ] ], [ 1 ], [ 4 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  4  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  4  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 4 ][128X[104X
    [4X[25Xgap>[125X [27XSetFinalStatesOfAut(P, [ 1, 2, 3 ]);[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  4  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  4  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1, 2, 3 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-15 SinkStatesOfAut[101X
  
  [33X[1;0Y[29X[2XSinkStatesOfAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XSinkStatesOfAut[110X  returns the sink states of an [10XAutomaton[110X or a
  [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 2, 2 ] ], [ 1 ], [ 3 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  3  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 3 ][128X[104X
    [4X[25Xgap>[125X [27XSinkStatesOfAut(P);[127X[104X
    [4X[28X[ 2 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-16 PermutedStatesAut[101X
  
  [33X[1;0Y[29X[2XPermutedStatesAut[102X( [3XP[103X, [3Xp[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XPermutedStatesAut[110X  permutes  the  names  of  the states of an
  [10XAutomaton[110X or a [10XPredicaton[110X [3XP[103X. The list [3Xp[103X contains all states, where the state
  [10Xi[110X (i.e. [10Xi[110X-th position) is mapped to the state [10Xp[i][110X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 6, [ [ 0 ], [ 1 ] ], [ [ 5, 2, 2, 3, 4, 6 ],[127X[104X
    [4X[25X>[125X [27X[ 2, 2, 6, 2, 2, 2 ] ], [ 1 ], [ 6 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  5  2  2  3  4  6  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  6  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=PermutedStatesAut(P,[1,6,4,3,2,5]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  3  4  6  5  6  [128X[104X
    [4X[28X  [ 1 ]  |  6  6  6  5  6  6  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-17 CopyAut[101X
  
  [33X[1;0Y[29X[2XCopyAut[102X( [3XP[103X ) [32X function[133X
  [33X[1;0Y[29X[2XCopyPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XCopyAut[110X copies either the [10XAutomaton[110X or the [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 2, [ [ 0 ], [ 1 ] ], [ [ 1, 2 ], [ 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XC:=CopyAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XSetFinalStatesOfAut(C, 2);[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  [128X[104X
    [4X[28X------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XDisplay(C);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  [128X[104X
    [4X[28X------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 2 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-18 MinimalAut[101X
  
  [33X[1;0Y[29X[2XMinimalAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XMinimalAut[110X returns the minimal deterministic finite automaton
  of  an  [10XAutomaton[110X  [3XP[103X.  Given  a  [10XPredicaton[110X [3XP[103X its automaton is minimized and
  returned as a [10XPredicaton[110X with the same variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 9, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 2, 6, 7, 4, 5, 4, 5, 8, 9 ], [ 3, 6, 6, 4, 4, 4, 4, 8, 8 ],[127X[104X
    [4X[25X>[125X [27X[ 4, 4, 5, 4, 5, 8, 9, 4, 5 ], [ 5, 4, 4, 4, 4, 8, 8, 4, 4 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 9 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 9 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  7  8  9  [128X[104X
    [4X[28X------------------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  2  6  7  4  5  4  5  8  9  [128X[104X
    [4X[28X  [ 1, 0 ]  |  3  6  6  4  4  4  4  8  8  [128X[104X
    [4X[28X  [ 0, 1 ]  |  4  4  5  4  5  8  9  4  5  [128X[104X
    [4X[28X  [ 1, 1 ]  |  5  4  4  4  4  8  8  4  4  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 9 ][128X[104X
    [4X[25Xgap>[125X [27XM:=MinimalAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  2  2  4  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  1  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  2  2  2  2  [128X[104X
    [4X[28X Initial states: [ 5 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("nondet", 8, [ [ 0 ], [ 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ [ 2 ], [ 2 ], [ 2 ], [ 4 ], [ 7 ], [ 6 ], [ 6 ], [ 8 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 3 ], [ 2 ], [ 4 ], [ 2 ], [ 6 ], [ 6 ], [ 8 ], [ 6 ] ] ],[127X[104X
    [4X[25X>[125X [27X[ 1, 5 ], [ 4, 8 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XM:=MinimalAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  2  3  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  1  3  [128X[104X
    [4X[28X Initial states: [ 4 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-19 NegatedAut[101X
  
  [33X[1;0Y[29X[2XNegatedAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XNegatedAut[110X changes the [10XFinal[110X states to non-final ones and the
  non-final states to [10XFinal[110X ones.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 4, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 2, 4 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 2, 4, 2 ] ], [ 1 ], [ 4 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  4  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  4  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 4 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=NegatedAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  2  4  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  4  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1, 2, 3 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-20 IntersectionAut[101X
  
  [33X[1;0Y[29X[2XIntersectionAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XIntersectionAut[110X  returns  the intersection of two [10XAutomata[110X or
  [10XPredicata[110X  [3XP[103X.  Note that the for intersection of two automata both must have
  the  same  ordered  alphabet.  For  the  intersection  of two [10XPredicata[110X with
  different alphabets use [2XIntersectionPredicata[102X ([14X2.3-19[114X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP1:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 2, 2, 2, 3, 5 ], [ 2, 2, 2, 3, 5 ], [ 4, 2, 5, 2, 2 ], [ 4, 2, 5, 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP2:=Predicaton(Automaton("det", 2, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 2 ], [ 2, 2 ], [ 2, 2 ], [ 1, 2 ] ], [ 1 ], [ 1 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP3:=IntersectionAut(P1, P2);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P3);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 9 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  7  8  9  [128X[104X
    [4X[28X------------------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  2  2  3  6  7  3  2  8  9  [128X[104X
    [4X[28X  [ 1, 0 ]  |  3  3  3  6  6  3  3  8  8  [128X[104X
    [4X[28X  [ 0, 1 ]  |  4  3  3  3  3  8  8  3  3  [128X[104X
    [4X[28X  [ 1, 1 ]  |  5  2  3  3  2  8  9  3  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 9 ][128X[104X
    [4X[25Xgap>[125X [27XP4:=MinimalAut(P3);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P4);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  2  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  2  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  2  1  2  4  [128X[104X
    [4X[28X Initial states: [ 5 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-21 UnionAut[101X
  
  [33X[1;0Y[29X[2XUnionAut[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XUnionAut[110X returns the union of two [10XAutomata[110X or [10XPredicata[110X [3XP[103X. Note
  that for the union of two automata both must have the same ordered alphabet.
  For  the  union of two [10XPredicata[110X with different alphabets use [2XUnionPredicata[102X
  ([14X2.3-20[114X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP1:=Predicaton(Automaton("det", 2, [ [ 0 ], [ 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 2 ], [ 2, 2 ] ], [ 1 ], [ 1 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP2:=Predicaton(Automaton("det", 4, [ [ 0 ], [ 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 3, 2, 2, 4 ], [ 2, 2, 4, 2 ] ], [ 1 ], [ 4 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP3:=UnionAut(P1, P2);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P3);[127X[104X
    [4X[28XPredicaton: nondeterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1      2      3      4      5      6      [128X[104X
    [4X[28X------------------------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  [ 1 ]  [ 2 ]  [ 5 ]  [ 4 ]  [ 4 ]  [ 6 ]  [128X[104X
    [4X[28X  [ 1 ]  |  [ 2 ]  [ 2 ]  [ 4 ]  [ 4 ]  [ 6 ]  [ 4 ]  [128X[104X
    [4X[28X Initial states: [ 1, 3 ][128X[104X
    [4X[28X Final states:   [ 1, 6 ][128X[104X
    [4X[25Xgap>[125X [27XM:=MinimalAut(P3);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  2  3  [128X[104X
    [4X[28X  [ 1 ]  |  1  1  2  1  [128X[104X
    [4X[28X Initial states: [ 4 ][128X[104X
    [4X[28X Final states:   [ 2, 3, 4 ][128X[104X
  [4X[32X[104X
  
  [1X2.2-22 IsRecognizedByAut[101X
  
  [33X[1;0Y[29X[2XIsRecognizedByAut[102X( [3XP[103X, [3Xword[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XIsRecognizedByAut[110X  checks if a [3Xword[103X, given by its letters, is
  accepted by the [10XAutomaton[110X or [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 5, 5, 5, 4, 5 ], [ 2, 3, 4, 5, 5 ] ], [ 1 ], [ 4 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  5  5  5  4  5  [128X[104X
    [4X[28X  [ 1 ]  |  2  3  4  5  5  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 4 ][128X[104X
    [4X[25Xgap>[125X [27XIsRecognizedByAut(P,[[1],[1],[1]]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsRecognizedByAut(P,[[1],[1],[1],[0],[0]]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsRecognizedByAut(P,[[1],[1],[0]]);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  
  [1X2.3 [33X[0;0YBasic functions on Predicata[133X[101X
  
  [33X[0;0YThe  following  functions act only on Predicata, accessing and modifying the
  alphabet [22XA:={0,1}^n[122X for a natural number [23Xn[123X (including 0).[133X
  
  [1X2.3-1 DecToBin[101X
  
  [33X[1;0Y[29X[2XDecToBin[102X( [3XD[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XDecToBin[110X  returns  for a natural numbers [3XD[103X or the list of its
  binary  representation.  Note  that here, motivated on how the automata read
  the  words,  the  binary representation are read in the other direction than
  usual, for example [22X4 = [0,0,1]_2[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XDecToBin(4);[127X[104X
    [4X[28X[ 0, 0, 1 ][128X[104X
    [4X[25Xgap>[125X [27XDecToBin(0);[127X[104X
    [4X[28X[ 0 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-2 BinToDec[101X
  
  [33X[1;0Y[29X[2XBinToDec[102X( [3XB[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XBinToDec[110X returns for a list [3XB[103X (i.e. a binary representation),
  containing [10X0[110Xs and [10X1[110Xs, the corresponding natural number. Note again that here
  the  [22Xâˆ‘ b_i+1*2^i[122X starting at [22Xi=0[122X is evaluated the other way around than it's
  usually done.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XBinToDec([ 0, 0, 1 ]);[127X[104X
    [4X[28X4[128X[104X
    [4X[25Xgap>[125X [27XBinToDec([ 0, 0, 1, 0, 0, 0, 0 ]);[127X[104X
    [4X[28X4[128X[104X
    [4X[25Xgap>[125X [27XBinToDec([ ]);[127X[104X
    [4X[28X0[128X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [1X2.3-3 IsAcceptedWordByPredicaton[101X
  
  [33X[1;0Y[29X[2XIsAcceptedWordByPredicaton[102X( [3XP[103X, [3XL[103X ) [32X function[133X
  [33X[1;0Y[29X[2XIsAcceptedByPredicaton[102X( [3XP[103X, [3XL[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XIsAcceptedWordByPredicaton[110X checks if a list of natural numbers
  [3XL[103X  or  a  list  of  binary representation [3XL[103X is accepted by the [10XPredicaton[110X [3XP[103X.
  Compare  with  [2XIsRecognizedByAut[102X ([14X2.2-22[114X), which uses the letters instead of
  the words.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 2, 2, 2, 2, 5 ], [ 4, 2, 2, 3, 2 ], [ 2, 2, 2, 2, 2 ], [ 2, 2, 5, 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  2  2  2  2  5  [128X[104X
    [4X[28X  [ 1, 0 ]  |  4  2  2  3  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  2  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  2  5  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ 7, 4 ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ DecToBin(7), DecToBin(4) ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 1, 1, 1, 0 ], [ 0, 0, 1, 0, 0, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsRecognizedByAut(P, [ [ 1, 0 ], [ 1, 0 ], [ 1, 1 ] ]); # 1st row = 7, 2nd row = 4[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.3-4 AcceptedWordsByPredicaton[101X
  
  [33X[1;0Y[29X[2XAcceptedWordsByPredicaton[102X( [3XP[103X[, [3Xb[103X] ) [32X function[133X
  [33X[1;0Y[29X[2XAcceptedByPredicaton[102X( [3XP[103X[, [3Xb[103X] ) [32X function[133X
  
  [33X[0;0YThe  function  [10XAcceptedWordsByPredicaton[110X  returns  the accepted words of the
  [10XPredicaton[110X  [3XP[103X  up  to  an upper bound [3Xb[103X (on default [10Xb=10[110X), either a positive
  integer  or  a  list  with positive integers as an individual bound for each
  variable.  Alternatively,  list  of lists where each list contains the to be
  tested values is also allowed.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 2, 2, 2, 2, 5 ], [ 4, 2, 2, 3, 2 ], [ 2, 2, 2, 2, 2 ], [ 2, 2, 5, 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P, [ 10, 20 ]);[127X[104X
    [4X[28X[ [ 7, 4 ] ][128X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0 ], [ 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 2 ], [ 2, 1, 3 ] ], [ 1 ], [ 1 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  3  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  1  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P, 29);[127X[104X
    [4X[28X[ [ 0 ], [ 3 ], [ 6 ], [ 9 ], [ 12 ], [ 15 ], [ 18 ], [ 21 ], [ 24 ], [ 27 ] ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P, [ [121..144] ]);[127X[104X
    [4X[28X[ [ 123 ], [ 126 ], [ 129 ], [ 132 ], [ 135 ], [ 138 ], [ 141 ], [ 144 ] ][128X[104X
  [4X[32X[104X
  
  [1X2.3-5 DisplayAcceptedWordsByPredicaton[101X
  
  [33X[1;0Y[29X[2XDisplayAcceptedWordsByPredicaton[102X( [3XP[103X[, [3Xb[103X, [3Xt[103X] ) [32X function[133X
  [33X[1;0Y[29X[2XDisplayAcceptedByPredicaton[102X( [3XP[103X[, [3Xb[103X, [3Xt[103X] ) [32X function[133X
  
  [33X[0;0YThe  function  [10XDisplayAcceptedWordsByPredicaton[110X prints the accepted words of
  the  [10XPredicaton[110X  [3XP[103X  in a nice way. For one variable as a "list" with [10XYES/no[110X,
  for two variables as a "matrix" containing [10XYES/no[110X and for three variables as
  a  "matrix",  which  entries  are  the  third  accepted natural numbers. The
  optional parameter [3Xb[103X gives an upper bound for the displayed natural numbers,
  where  either  a positive integer or a list of positive integers denotes the
  maximal  natural numbers which are asked for. The second optional parameter,
  if [10Xtrue[110X allows to reduce [10XYES/no[110X to [10XY/n[110X for the case of one variable.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 2, 2, 2, 3, 5 ], [ 4, 2, 2, 3, 2 ], [ 2, 2, 2, 3, 2 ], [ 2, 2, 5, 3, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P);[127X[104X
    [4X[28X[ [ 5, 4 ], [ 5, 6 ], [ 7, 4 ], [ 7, 6 ] ]  [128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedWordsByPredicaton(P, [8,10]);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: YES,[128X[104X
    [4X[28X otherwise if not accepted: no.[128X[104X
    [4X[28X[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  [128X[104X
    [4X[28X -------------------------------------------------[128X[104X
    [4X[28X   0 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   1 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   2 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   3 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   4 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   5 | no  no  no  no  YES no  YES no  no  no  no  [128X[104X
    [4X[28X   6 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   7 | no  no  no  no  YES no  YES no  no  no  no  [128X[104X
    [4X[28X   8 | no  no  no  no  no  no  no  no  no  no  no[128X[104X
    [4X[28X   [128X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 3, 2, 5, 4, 4 ], [ 3, 2, 4, 2, 4 ] ], [127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 3, 4, 5, 1 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  5  4  4  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  4  2  4  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1, 3, 4, 5 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P, 19);[127X[104X
    [4X[28X[ [ 0 ], [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ] ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedWordsByPredicaton(P, 29, true);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: Y,[128X[104X
    [4X[28X otherwise if not accepted: n.[128X[104X
    [4X[28X   0: Y   1: Y   2: Y   3: Y   4: Y   5: Y   6: n   7: n   8: n   9: n[128X[104X
    [4X[28X  10: n  11: n  12: n  13: n  14: n  15: n  16: n  17: n  18: n  19: n[128X[104X
    [4X[28X  20: n  21: n  22: n  23: n  24: n  25: n  26: n  27: n  28: n  29: n[128X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [1X2.3-6 DisplayAcceptedWordsByPredicatonInNxN[101X
  
  [33X[1;0Y[29X[2XDisplayAcceptedWordsByPredicatonInNxN[102X( [3XP[103X[, [3Xb[103X] ) [32X function[133X
  [33X[1;0Y[29X[2XDisplayAcceptedByPredicatonInNxN[102X( [3XP[103X[, [3Xb[103X] ) [32X function[133X
  
  [33X[0;0YThe function [10XDisplayAcceptedWordsByPredicatonInNxN[110X prints the accepted words
  of  the  [10XPredicaton[110X [3XP[103X with a variable position list of length two in a fancy
  way  in  [22Xâ„• Ã— â„•[122X. It "draws" the natural number solutions of linear equations,
  which  can be seen, due to the linearity, as "lines". The optional parameter
  [3Xl[103X  gives  an upper bound for the displayed accepted words, it must be a list
  containing two positive integers.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 14, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 6, 2, 2, 3, 4, 2, 2, 3, 7, 2, 10, 12, 12, 14 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 12, 2, 9, 11, 7, 7, 2, 13, 2, 2, 7, 2 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 12, 2, 7, 8, 14, 14, 2, 14, 2, 2, 14, 2 ], [127X[104X
    [4X[25X>[125X [27X[ 5, 2, 2, 12, 3, 2, 2, 12, 7, 2, 13, 2, 2, 14 ] ], [127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 12, 13, 14 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 14 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  7  8  9  10 11 12 13 14 [128X[104X
    [4X[28X---------------------------------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  6  2  2  3  4  2  2  3  7  2  10 12 12 14 [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  12 2  9  11 7  7  2  13 2  2  7  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  12 2  7  8  14 14 2  14 2  2  14 2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  5  2  2  12 3  2  2  12 7  2  13 2  2  14 [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 12, 13, 14 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedWordsByPredicatonInNxN(P, [ 15, 15 ]);[127X[104X
    [4X[28X  15 -                                      o                         [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X  14 -                                  o                             [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X  13 -                              o                                 [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X  12 -                          o                                     [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X  11 -                      o                                         [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X  10 -  o               o                                             [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   9 -      o       o                                                 [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   8 -          o                                                     [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   7 -      o       o                                                 [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   6 -  o               o                                             [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   5 -                      o                                         [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   4 -                          o                                     [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   3 -                              o                                 [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   2 -                                  o                             [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   1 -                                      o                         [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   0 -                                          o                     [128X[104X
    [4X[28X     |[128X[104X
    [4X[28X   --+--|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---->[128X[104X
    [4X[28X     |  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 [128X[104X
  [4X[32X[104X
  
  [1X2.3-7 AutomatonOfPredicaton[101X
  
  [33X[1;0Y[29X[2XAutomatonOfPredicaton[102X( [3XP[103X ) [32X function[133X
  [33X[1;0Y[29X[2XAutOfPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XAutomatonOfPredicaton[110X returns the [10XAutomaton[110X of a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 4, [ [ 0 ], [ 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 4, 2, 3, 3 ], [ 3, 2, 2, 3 ] ], [ 1 ], [ 3, 4, 1 ]), [ 1 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 2 letters with 4 states [128X[104X
    [4X[28Xand the variable position list [ 1 ]. >[128X[104X
    [4X[25Xgap>[125X [27XAutomatonOfPredicaton(P);[127X[104X
    [4X[28X< deterministic automaton on 2 letters with 4 states >[128X[104X
  [4X[32X[104X
  
  [1X2.3-8 VariablePositionListOfPredicaton[101X
  
  [33X[1;0Y[29X[2XVariablePositionListOfPredicaton[102X( [3XP[103X ) [32X function[133X
  [33X[1;0Y[29X[2XVarPosListOfPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XVariablePositionListOfPredicaton[110X returns the variable position
  list of a [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 2, 2, 3, 2 ], [ 4, 2, 2, 5, 2 ], [ 2, 2, 1, 2, 3 ], [ 2, 2, 4, 2, 5 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]), [ 4, 9 ]);;[127X[104X
    [4X[25Xgap>[125X [27XVariablePositionListOfPredicaton(P);[127X[104X
    [4X[28X[ 4, 9 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-9 SetVariablePositionListOfPredicaton[101X
  
  [33X[1;0Y[29X[2XSetVariablePositionListOfPredicaton[102X( [3XP[103X, [3Xl[103X ) [32X function[133X
  [33X[1;0Y[29X[2XSetVarPosListOfPredicaton[102X( [3XP[103X, [3Xl[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XSetVariablePositionListOfPredicaton[110X sets the variable position
  list   of   a  [10XPredicaton[110X  [3XP[103X,  permuting  the  alphabet  if  necessary,  see
  [2XPermutedAlphabetPredicaton[102X ([14X2.3-21[114X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 2, 2, 3, 2 ], [ 4, 2, 2, 5, 2 ], [ 2, 2, 1, 2, 3 ], [ 2, 2, 4, 2, 5 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]), [ 4, 9 ]);;[127X[104X
    [4X[25Xgap>[125X [27XSetVariablePositionListOfPredicaton(P, [ 1, 2 ]);[127X[104X
    [4X[25Xgap>[125X [27XVariablePositionListOfPredicaton(P);[127X[104X
    [4X[28X[ 1, 2 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-10 ProductLZeroPredicaton[101X
  
  [33X[1;0Y[29X[2XProductLZeroPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XProductLZeroPredicaton[110X  takes the [10XPredicaton[110X [3XP[103X and adds a new
  state.  This  new  state  is final and is reached through [10X[0,...,0][110X from all
  [10XFinal[110X  states.  Hence  the returned [10XPredicaton[110X recognizes the product of the
  languages  of  the given [10XPredicaton[110X and the language containing all the zero
  words.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [ [ 3, 2, 4, 2, 2 ],[127X[104X
    [4X[25X>[125X [27X[ 2, 2, 2, 5, 2 ] ], [ 1 ], [ 5 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  2  5  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 0, 1 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 0, 1, 0 ] ]);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(P);[127X[104X
    [4X[28X[ 0 ][ 0 ][ 1 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=ProductLZeroPredicaton(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: nondeterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1         2         3         4         5         6         [128X[104X
    [4X[28X------------------------------------------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  [ 3 ]     [ 2 ]     [ 4 ]     [ 2 ]     [ 2, 6 ]  [ 6 ]     [128X[104X
    [4X[28X  [ 1 ]  |  [ 2 ]     [ 2 ]     [ 2 ]     [ 5 ]     [ 2 ]     [ ]       [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5, 6 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 0, 1 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 0, 1, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(Q);[127X[104X
    [4X[28X[ 0 ][ 0 ][ 1 ]([ 0 ][ 0 ]*U@)[128X[104X
    [4X[25Xgap>[125X [27XM:=MinimalAut(Q);;[127X[104X
    [4X[25Xgap>[125X [27XM:=PermutedStatesAut(M, [ 5, 2, 4, 3, 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  5  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  2  5  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(M);[127X[104X
    [4X[28X[ 0 ][ 0 ][ 1 ][ 0 ]*[128X[104X
  [4X[32X[104X
  
  [1X2.3-11 RightQuotientLZeroPredicaton[101X
  
  [33X[1;0Y[29X[2XRightQuotientLZeroPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XRightQuotientLZeroPredicaton[110X  takes the [10XPredicaton[110X [3XP[103X and runs
  through  all  final  states. If a [10XFinal[110X state is reached with [10X[0,...,0][110X then
  this  state  is  added  to  the  final states. Hence the returned [10XPredicaton[110X
  recognizes  the  right quotient of the language of the given [10XPredicaton[110X with
  the language containing only the zero words.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 6, [ [ 0 ], [ 1 ] ], [ [ 3, 2, 4, 2, 6, 2 ],[127X[104X
    [4X[25X>[125X [27X[ 2, 2, 2, 5, 2, 2 ] ], [ 1 ], [ 6 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  6  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  2  5  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ 4 ]);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 0, 1 ] ]);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 0, 1, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(P);[127X[104X
    [4X[28X[ 0 ][ 0 ][ 1 ][ 0 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=RightQuotientLZeroPredicaton(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: nondeterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1      2      3      4      5      6      [128X[104X
    [4X[28X------------------------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  [ 3 ]  [ 2 ]  [ 4 ]  [ 2 ]  [ 6 ]  [ 2 ]  [128X[104X
    [4X[28X  [ 1 ]  |  [ 2 ]  [ 2 ]  [ 2 ]  [ 5 ]  [ 2 ]  [ 2 ]  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5, 6 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ 4 ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 0, 1 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 0, 1, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(Q);[127X[104X
    [4X[28X[ 0 ][ 0 ][ 1 ]([ 0 ]U@)[128X[104X
    [4X[25Xgap>[125X [27XM:=MinimalAut(Q);;[127X[104X
    [4X[25Xgap>[125X [27XM:=PermutedStatesAut(M, [ 6, 2, 5, 4, 3, 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  6  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  2  5  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5, 6 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(M, [ 4 ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(M);[127X[104X
    [4X[28X[ 0 ][ 0 ][ 1 ]([ 0 ]U@)[128X[104X
  [4X[32X[104X
  
  [1X2.3-12 NormalizedLeadingZeroPredicaton[101X
  
  [33X[1;0Y[29X[2XNormalizedLeadingZeroPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe   function   [10XNormalizedLeadingZeroPredicaton[110X   returns   the   union  of
  [2XProductLZeroPredicaton[102X ([14X2.3-10[114X) and [2XRightQuotientLZeroPredicaton[102X ([14X2.3-11[114X) of
  the  given  [10XPredicaton[110X  [3XP[103X.  Therefore  the  returned  [10XPredicaton[110X accepts any
  previously accepted words with cancelled or added leading zeros.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 7, [ [ 0 ], [ 1 ] ], [ [ 3, 2, 4, 2, 6, 2, 2], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 7, 5, 2, 2, 2 ] ], [ 1 ], [ 6, 7 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 7 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  7  [128X[104X
    [4X[28X---------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  6  2  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  7  5  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6, 7 ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 1 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 1, 0 ] ]);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 0, 1 ] ]);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(P, [ [ 0, 0, 1, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(P);[127X[104X
    [4X[28X[ 0 ]([ 1 ]U[ 0 ][ 1 ][ 0 ])[128X[104X
    [4X[25Xgap>[125X [27XQ:=NormalizedLeadingZeroPredicaton(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: nondeterministic finite automaton on 2 letters with 16 states,[128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1       2       3       4       5       6       7       8       [128X[104X
    [4X[28X----------------------------------------------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  [ 2 ]   [ 4 ]   [ 3 ]   [ 3 ]   [ 7 ]   [ 8 ]   [ 9 ]   [ 7 ]   [128X[104X
    [4X[28X  [ 1 ]  |  [ 3 ]   [ 5 ]   [ 3 ]   [ 6 ]   [ 3 ]   [ 3 ]   [ 3 ]   [ 3 ]   [128X[104X
    [4X[28X ...[128X[104X
    [4X[28X         |  9       10      11      12      13      14      15      16      [128X[104X
    [4X[28X----------------------------------------------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  [ 9 ]   [ 11 ]  [ 13 ]  [ 12 ]  [ 12 ]  [ 12 ]  [ 16 ]  [ 12 ]  [128X[104X
    [4X[28X  [ 1 ]  |  [ 3 ]   [ 12 ]  [ 14 ]  [ 12 ]  [ 15 ]  [ 12 ]  [ 12 ]  [ 12 ]  [128X[104X
    [4X[28X Initial states: [ 1, 10 ][128X[104X
    [4X[28X Final states:   [ 5, 7, 8, 9, 14, 15, 16 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(Q, 10);[127X[104X
    [4X[28X[ [ 2 ], [ 4 ] ][128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 1 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 1, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 0, 1 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedWordByPredicaton(Q, [ [ 0, 0, 1, 0 ] ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XM:=MinimalAut(Q);;[127X[104X
    [4X[25Xgap>[125X [27XM:=PermutedStatesAut(M, [ 3, 5, 1, 4, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states,[128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  5  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  5  5  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(M, 10);[127X[104X
    [4X[28X[ [ 2 ], [ 4 ] ][128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(M);[127X[104X
    [4X[28X[ 0 ]([ 0 ][ 1 ]U[ 1 ])[ 0 ]*[128X[104X
  [4X[32X[104X
  
  [1X2.3-13 SortedAlphabetPredicaton[101X
  
  [33X[1;0Y[29X[2XSortedAlphabetPredicaton[102X( [3XP[103X ) [32X function[133X
  [33X[1;0Y[29X[2XSortedAbcPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XSortedAlphabetPredicaton[110X  returns  the  [10XPredicaton[110X [3XP[103X with the
  component-wise sorted [10XAlphabet[110X (from right to left with [22X0<1[122X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0, 0, 0 ], [ 0, 0, 1 ], [ 1, 0, 0 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 0, 1 ], [ 0, 1, 0 ], [ 0, 1, 1 ], [ 1, 1, 0 ], [ 1, 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [127X[104X
    [4X[25X>[125X [27X[ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]), [ 1, 2, 3 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X ---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=SortedAlphabetPredicaton(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states,[128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X ---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-14 FormattedPredicaton[101X
  
  [33X[1;0Y[29X[2XFormattedPredicaton[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10X[110X  computes first the [2XNormalizedLeadingZeroPredicaton[102X ([14X2.3-12[114X)
  and then the [2XMinimalAut[102X ([14X2.2-18[114X) of the [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 7, [ [ 0 ], [ 1 ] ], [ [ 3, 2, 4, 2, 6, 2, 2], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 7, 5, 2, 2, 2 ] ], [ 1 ], [ 6, 7 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 7 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  7  [128X[104X
    [4X[28X---------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  3  2  4  2  6  2  2  [128X[104X
    [4X[28X  [ 1 ]  |  2  2  7  5  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6, 7 ][128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(P);[127X[104X
    [4X[28X[ 0 ]([ 1 ]U[ 0 ][ 1 ][ 0 ])[128X[104X
    [4X[25Xgap>[125X [27XM:=FormattedPredicaton(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(M);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0 ]  |  4  2  1  5  5  [128X[104X
    [4X[28X  [ 1 ]  |  2  5  5  2  5  [128X[104X
    [4X[28X Initial states: [ 3 ][128X[104X
    [4X[28X Final states:   [ 2 ][128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(M);[127X[104X
    [4X[28X[ 0 ]([ 0 ][ 1 ]U[ 1 ])[ 0 ]*[128X[104X
  [4X[32X[104X
  
  [1X2.3-15 IsValidInput[101X
  
  [33X[1;0Y[29X[2XIsValidInput[102X( [3XP[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XIsValidInput[110X  checks if the list [3Xn[103X contains positive integers
  and  if it is a valid variable position list of the given [10XPredicaton[110X [3XP[103X, i.e.
  variable position list is a subset of [3Xn[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 2, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 2 ], [ 2, 2 ], [ 1, 2 ], [ 2, 2 ] ], [ 1 ], [ 1 ]), [ 2, 4 ]);;[127X[104X
    [4X[25Xgap>[125X [27XIsValidInput(P, [ 1, 2, 3 ]);[127X[104X
    [4X[28XThe new variable position list must contain the old one of the Predicaton. [128X[104X
    [4X[28XCompare [ 2, 4 ] with [ 1, 2, 3 ].[128X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsValidInput(P, [ 1, 2, 3, 4 ]);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.3-16 ExpandedPredicaton[101X
  
  [33X[1;0Y[29X[2XExpandedPredicaton[102X( [3XP[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XExpandedPredicaton[110X  returns  the  [10XPredicaton[110X  [3XP[103X  with the new
  variable  position list [3Xn[103X. For each new variable position in [3Xn[103X, the alphabet
  size  doubles.  In  each step 0s and 1s are added at the correct position in
  all  letters  of the alphabet, whereas the transition matrix rows are copied
  accordingly.  Formally  this corresponds to the preimage of the homomorphism
  ignoring  a  component  of  the  letters applied to the deterministic finite
  automaton.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0 ], [ 1 ] ], [ [ 2, 2, 3 ], [127X[104X
    [4X[25X>[125X [27X[ 3, 2, 2 ] ], [ 1 ], [ 3 ]), [ 1 ]);[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0 ]  |  2  2  3  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 3 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=ExpandedPredicaton(P, [ 1, 2, 3 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  2  2  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  2  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  2  2  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  3  2  2  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  2  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  3  2  2  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  2  2  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 3 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-17 ProjectedPredicaton[101X
  
  [33X[1;0Y[29X[2XProjectedPredicaton[102X( [3XP[103X, [3Xp[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XProjectedPredicaton[110X  returns  the  [10XPredicaton[110X  [3XP[103X with the new
  variable  position  list  without [3Xp[103X. The alphabet is halved, ignoring the 0s
  and  1s  entries at position [3Xp[103X relative to the [10XVariablePositionList[110X, whereas
  the   transition   matrix  rows  are  combined  accordingly.  Formally  this
  corresponds to the image of homomorphism which ignores the [3Xp[103X-th component of
  the  letters applied to the deterministic finite automaton. This function is
  used for the interpretation of the existence quantifier.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 3, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]),[127X[104X
    [4X[25X>[125X [27X[ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XQ:=ProjectedPredicaton(P, 1);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 2 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0 ]  |  1  2  2  [128X[104X
    [4X[28X  [ 1 ]  |  1  2  1  [128X[104X
    [4X[28X Initial states: [ 3 ][128X[104X
    [4X[28X Final states:   [ 2, 3 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P, 10);[127X[104X
    [4X[28X[ [ 0, 0 ], [ 1, 2 ], [ 2, 4 ], [ 3, 6 ], [ 4, 8 ], [ 5, 10 ] ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(Q, 10);[127X[104X
    [4X[28X[ [ 0 ], [ 2 ], [ 4 ], [ 6 ], [ 8 ], [ 10 ] ][128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(P);[127X[104X
    [4X[28X([ 1, 0 ][ 1, 1 ]*[ 0, 1 ]U[ 0, 0 ])*[128X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(Q);[127X[104X
    [4X[28X[ 0 ]([ 0 ]U[ 1 ])*U@[128X[104X
  [4X[32X[104X
  
  [1X2.3-18 NegatedProjectedNegatedPredicaton[101X
  
  [33X[1;0Y[29X[2XNegatedProjectedNegatedPredicaton[102X( [3XP[103X, [3Xp[103X ) [32X function[133X
  
  [33X[0;0YThe   function   [10XNegatedProjectedNegatedPredicaton[110X   returns   the   negated
  ([2XNegatedAut[102X  ([14X2.2-19[114X)),  projected ([2XProjectedPredicaton[102X ([14X2.3-17[114X) with [3Xp[103X) and
  negated  [10XPredicaton[110X  [3XP[103X.  This function is used for the interpretation of the
  for all quantifier.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 2, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 2 ], [ 2, 2 ], [ 2, 2 ], [ 1, 2 ] ], [ 1 ], [ 1 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P, 5);[127X[104X
    [4X[28X[ [ 0, 0 ], [ 1, 1 ], [ 2, 2 ], [ 3, 3 ], [ 4, 4 ], [ 5, 5 ] ][128X[104X
    [4X[25Xgap>[125X [27XQ1:=ProjectedPredicaton(P, 1);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q1);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 1 state, [128X[104X
    [4X[28Xthe variable position list [ 2 ] and the following transitions:[128X[104X
    [4X[28X         |  1  [128X[104X
    [4X[28X---------------[128X[104X
    [4X[28X  [ 0 ]  |  1  [128X[104X
    [4X[28X  [ 1 ]  |  1  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(Q1, 5);[127X[104X
    [4X[28X[ [ 0 ], [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ] ][128X[104X
    [4X[25Xgap>[125X [27XQ2:=NegatedProjectedNegatedPredicaton(Q1, 2);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(Q2);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 1 letter with 1 state, [128X[104X
    [4X[28Xthe variable position list [ ] and the following transitions:[128X[104X
    [4X[28X       |  1  [128X[104X
    [4X[28X-------------[128X[104X
    [4X[28X  [ ]  |  1  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(Q2);[127X[104X
    [4X[28X[ true ][128X[104X
  [4X[32X[104X
  
  [1X2.3-19 IntersectionPredicata[101X
  
  [33X[1;0Y[29X[2XIntersectionPredicata[102X( [3XP1[103X, [3XP2[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XIntersectionPredicata[110X returns the intersection ([2XIntersectionAut[102X
  ([14X2.2-20[114X))  of  the [10XPredicata[110X of [3XP1[103X and [3XP2[103X after resizing ([2XExpandedPredicaton[102X
  ([14X2.3-16[114X))  and  sorting  ([2XSortedAlphabetPredicaton[102X ([14X2.3-13[114X)) the alphabet to
  match the new variable position list [3Xn[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP1:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 4, 2, 2, 2, 5 ], [ 2, 2, 5, 2, 2 ], [ 2, 2, 2, 3, 2 ], [ 4, 2, 2, 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P1);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  4  2  2  2  5  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  5  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  4  2  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P1, 10);[127X[104X
    [4X[28X[ [ 4, 2 ], [ 5, 3 ] ][128X[104X
    [4X[25Xgap>[125X [27XP2:=Predicaton(Automaton("det", 6, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 5, 2, 2, 3, 2, 6 ], [ 2, 2, 6, 2, 2, 2 ], [ 4, 2, 2, 2, 3, 2 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 2, 2, 2, 2 ] ], [ 1 ], [ 6 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P2);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 6 states,[128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  [128X[104X
    [4X[28X---------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  5  2  2  3  2  6  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  6  2  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  4  2  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  2  2  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P2, 10);[127X[104X
    [4X[28X[ [ 4, 1 ], [ 4, 2 ] ][128X[104X
    [4X[25Xgap>[125X [27XP3:=IntersectionPredicata(P1, P2, [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P3);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 5 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  2  2  4  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  1  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  2  2  2  2  [128X[104X
    [4X[28X Initial states: [ 5 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P3, 10);[127X[104X
    [4X[28X[ [ 4, 2 ] ][128X[104X
  [4X[32X[104X
  
  [1X2.3-20 UnionPredicata[101X
  
  [33X[1;0Y[29X[2XUnionPredicata[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XUnionPredicata[110X  returns  union  ([2XUnionAut[102X  ([14X2.2-21[114X))  of  the
  [10XPredicata[110X  of  [3XP1[103X  and  [3XP2[103X  after resizing ([2XExpandedPredicaton[102X ([14X2.3-16[114X)) and
  sorting  ([2XSortedAlphabetPredicaton[102X  ([14X2.3-13[114X))  the alphabet to match the new
  variable position list [3Xn[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP1:=Predicaton(Automaton("det", 5, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 4, 2, 2, 2, 5 ], [ 2, 2, 5, 2, 2 ], [ 2, 2, 2, 3, 2 ], [ 4, 2, 2, 2, 2 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 5 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P1);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 5 states,[128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  4  2  2  2  5  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  5  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  4  2  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 5 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P1, 10);[127X[104X
    [4X[28X[ [ 4, 2 ], [ 5, 3 ] ][128X[104X
    [4X[25Xgap>[125X [27XP2:=Predicaton(Automaton("det", 6, [ [ 0, 0 ], [ 1, 0 ], [ 0, 1 ], [ 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 5, 2, 2, 3, 2, 6 ], [ 2, 2, 6, 2, 2, 2 ], [ 4, 2, 2, 2, 3, 2 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 2, 2, 2, 2, 2 ] ], [ 1 ], [ 6 ]), [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P2);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  [128X[104X
    [4X[28X---------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  5  2  2  3  2  6  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  6  2  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  4  2  2  2  3  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  2  2  2  2  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P2, 10);[127X[104X
    [4X[28X[ [ 4, 1 ], [ 4, 2 ] ][128X[104X
    [4X[25Xgap>[125X [27XP3:=UnionPredicata(P1, P2, [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P3);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  [128X[104X
    [4X[28X---------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  6  6  3  2  6  [128X[104X
    [4X[28X  [ 1, 0 ]  |  6  6  1  6  6  6  [128X[104X
    [4X[28X  [ 0, 1 ]  |  6  3  6  6  4  6  [128X[104X
    [4X[28X  [ 1, 1 ]  |  6  6  6  6  2  6  [128X[104X
    [4X[28X Initial states: [ 5 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P3, 9);[127X[104X
    [4X[28X[ [ 4, 1 ], [ 4, 2 ], [ 5, 3 ] ][128X[104X
  [4X[32X[104X
  
  [1X2.3-21 PermutedAlphabetPredicaton[101X
  
  [33X[1;0Y[29X[2XPermutedAlphabetPredicaton[102X( [3XA[103X, [3Xl[103X ) [32X function[133X
  [33X[1;0Y[29X[2XPermutedAbcPredicaton[102X( [3XA[103X, [3Xl[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XPermutedAlphabetPredicaton[110X  returns  the  [10XPredicaton[110X  of  the
  [10XAutomaton[110X  [3XA[103X  with  permuted alphabet according to [3Xl[103X and accordingly swapped
  transition  matrix  rows.  This  is  relevant for the first call of specific
  automata,  where  the  variable  order matters. E.g. the following automaton
  corresponds to the formula [22Xx+y=z[122X, where the the variable [22Xx[122X is at position [22X1[122X,
  [22Xy[122X  at  [22X2[122X  and  [22Xz[122X  at  [22X3[122X.  So creating the the automaton recognizing the same
  formula  but  with  variable  [22Xx[122X  at  position [22X3[122X, [22Xy[122X at [22X2[122X and [22Xz[122X at [22X1[122X needs the
  permuted  alphabet,  i.e.  each  letter  is  permuted according to the given
  variable position list [3Xl[103X (here [10Xl=[ 3, 2, 1 ][110X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 3, [ [ 0, 0, 0 ], [ 0, 0, 1 ], [ 1, 0, 0 ], [ 1, 0, 1 ],[127X[104X
    [4X[25X>[125X [27X[ 0, 1, 0 ], [ 0, 1, 1 ], [ 1, 1, 0 ], [ 1, 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [ 1, 3, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 3, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplayAut(A);[127X[104X
    [4X[28Xdeterministic finite automaton on 8 letters with 3 states [128X[104X
    [4X[28Xand the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XP:=PermutedAlphabetPredicaton(A, [3,2,1]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-22 PredicatonFromAut[101X
  
  [33X[1;0Y[29X[2XPredicatonFromAut[102X( [3XA[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe   function   [10XPredicatonFromAut[110X   returns  the  according  to  [3Xn[103X  resized
  ([2XExpandedPredicaton[102X  ([14X2.3-16[114X))  [10XPredicaton[110X  of  the  [10XAutomaton[110X  [3XA[103X  with  the
  permuted    alphabet    ([2XPermutedAlphabetPredicaton[102X    ([14X2.3-21[114X)),   if   the
  [10XVariablePositionList[110X [3Xl[103X isn't sorted.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 3, [ [ 0, 0, 0 ], [ 0, 0, 1 ], [ 1, 0, 0 ], [ 1, 0, 1 ],[127X[104X
    [4X[25X>[125X [27X[ 0, 1, 0 ], [ 0, 1, 1 ], [ 1, 1, 0 ], [ 1, 1, 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ], [ 3, 1, 3 ], [ 1, 3, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 3, 3 ], [ 3, 2, 3 ] ], [ 1 ], [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplayAut(A);[127X[104X
    [4X[28Xdeterministic finite automaton on 8 letters with 3 states [128X[104X
    [4X[28Xand the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XP:=PredicatonFromAut(A,[3,2,1],[1,2,3,4]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 16 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3, 4 ] and the following transitions:[128X[104X
    [4X[28X                  |  1  2  3  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0, 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 0, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 0, 0 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 1, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 0, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 0, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 0, 1, 1 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1, 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 1, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.3-23 FinitelyManyWordsAccepted[101X
  
  [33X[1;0Y[29X[2XFinitelyManyWordsAccepted[102X( [3XA[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XFinitelyManyWordsAccepted[110X  checks  if  a  [10XPredicaton[110X has only
  finitely many solutions, except the leading zero completion.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ], [127X[104X
    [4X[25X>[125X [27X[ [ 4, 2, 2, 3, 5 ], [ 2, 2, 5, 2, 2 ] ], [ 1 ], [ 5 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XAcceptedWordsByPredicaton(P);[127X[104X
    [4X[28X[ [ 4 ] ][128X[104X
    [4X[25Xgap>[125X [27XFinitelyManyWordsAccepted(P);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.3-24 PredicatonToRatExp[101X
  
  [33X[1;0Y[29X[2XPredicatonToRatExp[102X( [3XP[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XPredicatonToRatExp[110X  returns  the  regular  expression  of the
  [10XAutomaton[110X or [10XPredicaton[110X [3XP[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27X# Continued[127X[104X
    [4X[25Xgap>[125X [27XP:=Predicaton(Automaton("det", 5, [ [ 0 ], [ 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 5, 5, 5, 4, 5 ], [ 2, 3, 4, 5, 5 ] ], [ 1 ], [ 4 ]), [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XPredicatonToRatExp(P);[127X[104X
    [4X[28X[ 1 ][ 1 ][ 1 ][ 0 ]*[128X[104X
  [4X[32X[104X
  
  [1X2.3-25 WordsOfRatExp[101X
  
  [33X[1;0Y[29X[2XWordsOfRatExp[102X( [3Xr[103X, [3Xdepth[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XWordsOfRatExp[110X returns all words which can be created from the
  regular expression [3Xr[103X by applying the star operator at most [3Xdepth[103X times.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 3,[127X[104X
    [4X[25X>[125X [27X[ [ 0, 0, 0 ], [ 1, 0, 0 ], [ 0, 1, 0 ], [ 1, 1, 0 ],[127X[104X
    [4X[25X>[125X [27X[ 0, 0, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 1, 3 ], [ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]);[127X[104X
    [4X[28X< deterministic automaton on 8 letters with 3 states >[128X[104X
    [4X[25Xgap>[125X [27Xr:=PredicatonToRatExp(A);[127X[104X
    [4X[28X([ 1, 1, 0 ]([ 1, 0, 0 ]U[ 0, 1, 0 ]U[ 1, 1, 1 ])*[128X[104X
    [4X[28X [ 0, 0, 1 ]U[ 0, 0, 0 ]U[ 1, 0, 1 ]U[ 0, 1, 1 ])*[128X[104X
    [4X[25Xgap>[125X [27XWordsOfRatExp(r, 1);[127X[104X
    [4X[28X[ [ [ 1, 1, 0 ], [ 1, 0, 0 ], [ 0, 0, 1 ] ], [128X[104X
    [4X[28X  [ [ 1, 1, 0 ], [ 0, 1, 0 ], [ 0, 0, 1 ] ], [128X[104X
    [4X[28X  [ [ 1, 1, 0 ], [ 1, 1, 1 ], [ 0, 0, 1 ] ], [128X[104X
    [4X[28X  [ [ 1, 1, 0 ], [  ], [ 0, 0, 1 ] ],[128X[104X
    [4X[28X  [ [ 0, 0, 0 ] ], [ [ 1, 0, 1 ] ], [128X[104X
    [4X[28X  [ [ 0, 1, 1 ] ],[128X[104X
    [4X[28X  [ [  ] ] ][128X[104X
  [4X[32X[104X
  
  [1X2.3-26 WordsOfRatExpInterpreted[101X
  
  [33X[1;0Y[29X[2XWordsOfRatExpInterpreted[102X( [3Xr[103X[, [3Xdepth[103X] ) [32X function[133X
  
  [33X[0;0YThe function [10XWordsOfRatExpInterpreted[110X returns all words which can be created
  from  the  regular  expression [3Xr[103X by applying the star operator at most [3Xdepth[103X
  times (default [10Xdepth=1[110X) as a list of natural numbers.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=Automaton("det", 3,[127X[104X
    [4X[25X>[125X [27X[ [ 0, 0, 0 ], [ 1, 0, 0 ], [ 0, 1, 0 ], [ 1, 1, 0 ],[127X[104X
    [4X[25X>[125X [27X[ 0, 0, 1 ], [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 1 ] ],[127X[104X
    [4X[25X>[125X [27X[ [ 1, 3, 3 ], [ 3, 2, 3 ], [ 3, 2, 3 ], [ 2, 3, 3 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 1, 3 ], [ 1, 3, 3 ], [ 1, 3, 3 ], [ 3, 2, 3 ] ],[127X[104X
    [4X[25X>[125X [27X[ 1 ], [ 1 ]);[127X[104X
    [4X[28X< deterministic automaton on 8 letters with 3 states >[128X[104X
    [4X[25Xgap>[125X [27Xr:=PredicatonToRatExp(A);[127X[104X
    [4X[28X([ 1, 1, 0 ]([ 1, 0, 0 ]U[ 0, 1, 0 ]U[ 1, 1, 1 ])*[128X[104X
    [4X[28X [ 0, 0, 1 ]U[ 0, 0, 0 ]U[ 1, 0, 1 ]U[ 0, 1, 1 ])*[128X[104X
    [4X[25Xgap>[125X [27XWordsOfRatExpInterpreted(r, 1);[127X[104X
    [4X[28X[ [ 0, 0, 0 ], [ 0, 1, 1 ], [ 1, 0, 1 ], [ 1, 1, 2 ], [ 1, 3, 4 ], [128X[104X
    [4X[28X  [ 3, 1, 4 ], [ 3, 3, 6 ] ][128X[104X
  [4X[32X[104X
  
  
  [1X2.4 [33X[0;0YSpecial functions on Predicata[133X[101X
  
  [1X2.4-1 IsValidInputList[101X
  
  [33X[1;0Y[29X[2XIsValidInputList[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XIsValidInputList[110X checks if the lists [3Xl[103X and [3Xn[103X correct lists for
  calling  a [10XPredicaton[110X, i.e. both lists must contain positive unique integers
  and [3Xl[103X must be a subset of [3Xn[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XIsValidInputList([1,2,3], [1,2,3,4]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsValidInputList([1,1,2,3], [1,2,3,4]);[127X[104X
    [4X[28XVariable position list must contain unique positive integers.[128X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsValidInputList([4,3,5], [4,5]);[127X[104X
    [4X[28XVariable position list must be a subset of requested size list. [128X[104X
    [4X[28XCompare: [ 4, 3, 5 ] with [ 4, 5 ][128X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsValidInputList([4,3,5], [3,4,5,6]);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.4-2 BooleanPredicaton[101X
  
  [33X[1;0Y[29X[2XBooleanPredicaton[102X( [3XB[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XBooleanPredicaton[110X returns the [10XPredicaton[110X which consists of one
  state. This state is a final state if [3XB[103X is [10X"true"[110X and a non-final state if [3XB[103X
  is [10X"false"[110X. The list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP1:=BooleanPredicaton("true",[]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P1);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 1 letter with 1 state, [128X[104X
    [4X[28Xthe variable position list [ ] and the following transitions:[128X[104X
    [4X[28X       |  1  [128X[104X
    [4X[28X-------------[128X[104X
    [4X[28X  [ ]  |  1  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XP2:=BooleanPredicaton("false", [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P2);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 1 state, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  [128X[104X
    [4X[28X------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  [128X[104X
    [4X[28X  [ 1, 0 ]  |  1  [128X[104X
    [4X[28X  [ 0, 1 ]  |  1  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ ][128X[104X
  [4X[32X[104X
  
  [1X2.4-3 PredicataEqualAut[101X
  
  [33X[1;0Y[29X[2XPredicataEqualAut[102X[32X global variable[133X
  
  [33X[0;0YThe  variable  [10XPredicataEqualAut[110X  returns the [10XAutomaton[110X which recognizes the
  language of [22Xx=y[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=PredicataEqualAut;[127X[104X
    [4X[28X< deterministic automaton on 4 letters with 2 states >[128X[104X
    [4X[25Xgap>[125X [27XDisplayAut(A);[127X[104X
    [4X[28Xdeterministic finite automaton on 4 letters with 2 states [128X[104X
    [4X[28Xand the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.4-4 EqualPredicaton[101X
  
  [33X[1;0Y[29X[2XEqualPredicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XEqualPredicaton[110X  returns  the [10XPredicaton[110X which recognizes the
  language  of [22Xx=y[122X, where [22Xx[122X is at position [3Xl[1][103X and [22Xy[122X is at position [3Xl[2][103X. The
  list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP1:=EqualPredicaton([ 1, 2 ], [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P1);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XP2:=EqualPredicaton([ 3, 4 ], [ 1, 2, 3, 4 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P2);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 16 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3, 4 ] and the following transitions:[128X[104X
    [4X[28X                  |  1  2  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 0, 0, 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 0, 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 0, 1, 1 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0, 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0, 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 0, 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 0, 1, 1 ]  |  1  2  [128X[104X
    [4X[28X  [ 0, 1, 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 0, 1, 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1, 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1, 1, 1 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 1, 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 1, 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1, 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1, 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.4-5 PredicataAdditionAut[101X
  
  [33X[1;0Y[29X[2XPredicataAdditionAut[102X[32X global variable[133X
  
  [33X[0;0YThe variable [10XPredicataAdditionAut[110X returns the [10XAutomaton[110X which recognizes the
  language [22Xx+y=z.[122X[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XA:=PredicataAdditionAut;[127X[104X
    [4X[28X< deterministic automaton on 8 letters with 3 states >[128X[104X
    [4X[25Xgap>[125X [27XDisplayAut(A);[127X[104X
    [4X[28Xdeterministic finite automaton on 8 letters with 3 states [128X[104X
    [4X[28Xand the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [1X2.4-6 AdditionPredicaton[101X
  
  [33X[1;0Y[29X[2XAdditionPredicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XAdditionPredicaton[110X returns the [10XPredicaton[110X which recognizes the
  language  [22Xx+y=z[122X, where [22Xx[122X is at position [3Xl[1][103X, [22Xy[122X is at position [3Xl[2][103X and [22Xz[122X is
  at position [3Xl[3][103X. The list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicaton([1,2,3],[1,2,3]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 8 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2, 3 ] and the following transitions:[128X[104X
    [4X[28X               |  1  2  3  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 0, 1, 0 ]  |  3  2  3  [128X[104X
    [4X[28X  [ 1, 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 0, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 0, 1, 1 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, [ 15, 15, 30 ]);[127X[104X
    [4X[28X[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  [128X[104X
    [4X[28X ---------------------------------------------------------------------[128X[104X
    [4X[28X   0 | 0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  [128X[104X
    [4X[28X   1 | 1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  [128X[104X
    [4X[28X   2 | 2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  [128X[104X
    [4X[28X   3 | 3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  [128X[104X
    [4X[28X   4 | 4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  [128X[104X
    [4X[28X   5 | 5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  [128X[104X
    [4X[28X   6 | 6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  [128X[104X
    [4X[28X   7 | 7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  [128X[104X
    [4X[28X   8 | 8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  [128X[104X
    [4X[28X   9 | 9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  [128X[104X
    [4X[28X  10 | 10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  [128X[104X
    [4X[28X  11 | 11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  [128X[104X
    [4X[28X  12 | 12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  [128X[104X
    [4X[28X  13 | 13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  [128X[104X
    [4X[28X  14 | 14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  [128X[104X
    [4X[28X  15 | 15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30[128X[104X
    [4X[28X  [128X[104X
  [4X[32X[104X
  
  [1X2.4-7 AdditionPredicatonNSummands[101X
  
  [33X[1;0Y[29X[2XAdditionPredicatonNSummands[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe     function     [10XAdditionPredicatonNSummands[110X    calls    the    function
  [2XAdditionPredicatonNSummandsExplicit[102X   ([14X2.5-2[114X)  and  returns  the  [10XPredicaton[110X
  recognizing  the  language  [22Xx_1+... x_N=x_N+1[122X. The variables position list [3Xl[103X
  gives  the  positions  of the variables [22Xx_i[122X and the list [3Xn[103X gives the resized
  variable        position        list.        The        two        functions
  [2XAdditionPredicatonNSummandsIterative[102X               ([14X2.5-3[114X)               and
  [2XAdditionPredicatonNSummandsRecursive[102X  ([14X2.5-4[114X) create it in a more naive way,
  i.e.  the first creates the [10XPredicaton[110X from the simple automaton recognizing
  [22Xx+y=z[122X  step  by  step  and  the second creates the [10XPredicaton[110X recursively by
  splitting the variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicatonNSummands(3, [ 1, 6, 3, 9 ], [ 1, 3, 6, 9 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 16 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 3, 6, 9 ] and the following transitions:[128X[104X
    [4X[28X                  |  1  2  3  4  [128X[104X
    [4X[28X---------------------------------[128X[104X
    [4X[28X  [ 0, 0, 0, 0 ]  |  1  4  2  4  [128X[104X
    [4X[28X  [ 1, 0, 0, 0 ]  |  4  2  4  4  [128X[104X
    [4X[28X  [ 0, 0, 1, 0 ]  |  4  2  4  4  [128X[104X
    [4X[28X  [ 1, 0, 1, 0 ]  |  2  4  3  4  [128X[104X
    [4X[28X  [ 0, 1, 0, 0 ]  |  4  2  4  4  [128X[104X
    [4X[28X  [ 1, 1, 0, 0 ]  |  2  4  3  4  [128X[104X
    [4X[28X  [ 0, 1, 1, 0 ]  |  2  4  3  4  [128X[104X
    [4X[28X  [ 1, 1, 1, 0 ]  |  4  3  4  4  [128X[104X
    [4X[28X  [ 0, 0, 0, 1 ]  |  4  1  4  4  [128X[104X
    [4X[28X  [ 1, 0, 0, 1 ]  |  1  4  2  4  [128X[104X
    [4X[28X  [ 0, 0, 1, 1 ]  |  1  4  2  4  [128X[104X
    [4X[28X  [ 1, 0, 1, 1 ]  |  4  2  4  4  [128X[104X
    [4X[28X  [ 0, 1, 0, 1 ]  |  1  4  2  4  [128X[104X
    [4X[28X  [ 1, 1, 0, 1 ]  |  4  2  4  4  [128X[104X
    [4X[28X  [ 0, 1, 1, 1 ]  |  4  2  4  4  [128X[104X
    [4X[28X  [ 1, 1, 1, 1 ]  |  2  4  3  4  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
  [1X2.4-8 TimesNPredicaton[101X
  
  [33X[1;0Y[29X[2XTimesNPredicaton[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XTimesNPredicaton[110X  returns  the  [10XPredicaton[110X calls the function
  [2XTimesNPredicatonExplicit[102X  ([14X2.5-5[114X) and returns the [10XPredicaton[110X recognizing the
  language [22XNâ‹… x=y[122X, where [22Xx[122X is at position [3Xl[1][103X and [22Xy[122X is at position [3Xl[2][103X. Note
  that  [22XNâ‹… x[122X is a shortcut for [22XN[122X-times the addition of [22Xx[122X. The list [3Xn[103X gives the
  resized  variable  position  list.  The  function  [10XTimesNPredicatonRecursive[110X
  creates the [10XPredicaton[110X recursively from multiplications with [22XN<10[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=TimesNPredicaton(10, [ 1, 2 ], [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 11 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  5  6  7  8  9  10 11 [128X[104X
    [4X[28X------------------------------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  11 2  11 3  11 4  11 5  11 11 [128X[104X
    [4X[28X  [ 1, 0 ]  |  6  11 7  11 8  11 9  11 10 11 11 [128X[104X
    [4X[28X  [ 0, 1 ]  |  11 1  11 2  11 3  11 4  11 5  11 [128X[104X
    [4X[28X  [ 1, 1 ]  |  11 6  11 7  11 8  11 9  11 10 11 [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P, [ 10, 60 ]);[127X[104X
    [4X[28X[ [ 0, 0 ], [ 1, 10 ], [ 2, 20 ], [ 3, 30 ], [ 4, 40 ], [ 5, 50 ], [ 6, 60 ] ][128X[104X
  [4X[32X[104X
  
  [1X2.4-9 SumOfProductsPredicaton[101X
  
  [33X[1;0Y[29X[2XSumOfProductsPredicaton[102X( [3Xl[103X, [3Xm[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe   function   [10XSumOfProductsPredicatonExplicit[110X   returns   the  [10XPredicaton[110X
  recognizing  the  language  [22Xâˆ‘  m_i  â‹… x_i = 0[122X. The variables position list [3Xl[103X
  gives  the  positions  of  the  variables [22Xx_i[122X, the list [3Xm[103X gives the integers
  (positive  or  negative)  and the list [3Xn[103X gives the resized variable position
  list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=SumOfProductsPredicaton([ 1, 2, 3 ], [ 7, 4, -5 ], [ 1, 2, 3 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 8 letters with 16 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3 ]. >[128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, [ 15, 15, 100 ]);[127X[104X
    [4X[28X[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  [128X[104X
    [4X[28X ---------------------------------------------------------------------[128X[104X
    [4X[28X   0 | 0   --  --  --  --  4   --  --  --  --  8   --  --  --  --  12  [128X[104X
    [4X[28X   1 | --  --  3   --  --  --  --  7   --  --  --  --  11  --  --  --  [128X[104X
    [4X[28X   2 | --  --  --  --  6   --  --  --  --  10  --  --  --  --  14  --  [128X[104X
    [4X[28X   3 | --  5   --  --  --  --  9   --  --  --  --  13  --  --  --  --  [128X[104X
    [4X[28X   4 | --  --  --  8   --  --  --  --  12  --  --  --  --  16  --  --  [128X[104X
    [4X[28X   5 | 7   --  --  --  --  11  --  --  --  --  15  --  --  --  --  19  [128X[104X
    [4X[28X   6 | --  --  10  --  --  --  --  14  --  --  --  --  18  --  --  --  [128X[104X
    [4X[28X   7 | --  --  --  --  13  --  --  --  --  17  --  --  --  --  21  --  [128X[104X
    [4X[28X   8 | --  12  --  --  --  --  16  --  --  --  --  20  --  --  --  --  [128X[104X
    [4X[28X   9 | --  --  --  15  --  --  --  --  19  --  --  --  --  23  --  --  [128X[104X
    [4X[28X  10 | 14  --  --  --  --  18  --  --  --  --  22  --  --  --  --  26  [128X[104X
    [4X[28X  11 | --  --  17  --  --  --  --  21  --  --  --  --  25  --  --  --  [128X[104X
    [4X[28X  12 | --  --  --  --  20  --  --  --  --  24  --  --  --  --  28  --  [128X[104X
    [4X[28X  13 | --  19  --  --  --  --  23  --  --  --  --  27  --  --  --  --  [128X[104X
    [4X[28X  14 | --  --  --  22  --  --  --  --  26  --  --  --  --  30  --  --  [128X[104X
    [4X[28X  15 | 21  --  --  --  --  25  --  --  --  --  29  --  --  --  --  33  [128X[104X
  [4X[32X[104X
  
  [1X2.4-10 TermEqualTermPredicaton[101X
  
  [33X[1;0Y[29X[2XTermEqualTermPredicaton[102X( [3Xl1[103X, [3Xm1[103X, [3Xi1[103X, [3Xl2[103X, [3Xm2[103X, [3Xi2[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XTermEqualTermPredicaton[110X returns the [10XPredicaton[110X recognizing the
  language  [22Xâˆ‘  m_1_i  â‹…  x_i  +  âˆ‘  i_1 = âˆ‘ m_2_i â‹… y_i + âˆ‘ i_2[122X. The variables
  position  lists  [3Xl1[103X  and [3Xl2[103X gives the positions of the variables [22Xx_i[122X and [22Xy_i[122X
  respectively,  the lists [3Xm1[103X and [3Xm2[103X gives the integers (positive or negative)
  and the list [3Xn[103X gives the resized variable position list. Note: This function
  allows  double  occurrences  of  the same variable in both variable position
  lists [3Xl1[103X and [3Xl2[103X. The lists [3Xi1[103X and [3Xi1[103X gives the integer additions on the left
  and right side, whereas [3Xl1[103X and [3Xm1[103X or [3Xl2[103X and [3Xm2[103X must contain at it's position
  [10X"int"[110X. This function calls [2XSumOfProductsPredicaton[102X ([14X2.4-9[114X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27X# 5*x1 + 2*x1 + 4 = 6*x2 + 1*x3[127X[104X
    [4X[25Xgap>[125X [27XP:=TermEqualTermPredicaton( [ 1, 1, "int" ], [ 5, 2, "int" ], [ 4 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 3 ], [ 6, 1 ], [ ], [ 1, 2, 3 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 8 letters with 14 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3 ]. >[128X[104X
    [4X[25Xgap>[125X [27XAcceptedByPredicaton(P);[127X[104X
    [4X[28X[ [ 0, 0, 4 ], [ 1, 1, 5 ], [ 2, 2, 6 ], [ 2, 3, 0 ], [ 3, 3, 7 ], [ 3, 4, 1 ],[128X[104X
    [4X[28X  [ 4, 4, 8 ], [ 4, 5, 2 ], [ 5, 5, 9 ], [ 5, 6, 3 ], [ 6, 6, 10 ], [ 6, 7, 4 ],[128X[104X
    [4X[28X  [ 7, 8, 5 ], [ 8, 9, 6 ], [ 8, 10, 0 ], [ 9, 10, 7 ] ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, [10, 15, 100]);[127X[104X
    [4X[28X[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  [128X[104X
    [4X[28X ---------------------------------------------------------------------[128X[104X
    [4X[28X   0 | 4   --  --  --  --  --  --  --  --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   1 | 11  5   --  --  --  --  --  --  --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   2 | 18  12  6   0   --  --  --  --  --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   3 | 25  19  13  7   1   --  --  --  --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   4 | 32  26  20  14  8   2   --  --  --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   5 | 39  33  27  21  15  9   3   --  --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   6 | 46  40  34  28  22  16  10  4   --  --  --  --  --  --  --  --  [128X[104X
    [4X[28X   7 | 53  47  41  35  29  23  17  11  5   --  --  --  --  --  --  --  [128X[104X
    [4X[28X   8 | 60  54  48  42  36  30  24  18  12  6   0   --  --  --  --  --  [128X[104X
    [4X[28X   9 | 67  61  55  49  43  37  31  25  19  13  7   1   --  --  --  --  [128X[104X
    [4X[28X  10 | 74  68  62  56  50  44  38  32  26  20  14  8   2   --  --  --  [128X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [1X2.4-11 GreaterEqualNPredicaton[101X
  
  [33X[1;0Y[29X[2XGreaterEqualNPredicaton[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XGreaterEqualNPredicaton[110X returns the [10XPredicaton[110X recognizing the
  language [22Xx>=N[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=GreaterEqualNPredicaton(15, [ 1 ], [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP:=SortedStatesAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 8 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  7  8  [128X[104X
    [4X[28X------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  7  6  3  3  4  4  6  8  [128X[104X
    [4X[28X  [ 1 ]  |  2  5  8  3  3  4  6  8  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 8 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 29, true);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: Y, [128X[104X
    [4X[28X otherwise if not accepted: n.[128X[104X
    [4X[28X   0: n   1: n   2: n   3: n   4: n   5: n   6: n   7: n   8: n   9: n[128X[104X
    [4X[28X  10: n  11: n  12: n  13: n  14: n  15: Y  16: Y  17: Y  18: Y  19: Y[128X[104X
    [4X[28X  20: Y  21: Y  22: Y  23: Y  24: Y  25: Y  26: Y  27: Y  28: Y  29: Y[128X[104X
    [4X[28X [128X[104X
  [4X[32X[104X
  
  [1X2.4-12 GreaterNPredicaton[101X
  
  [33X[1;0Y[29X[2XGreaterNPredicaton[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XGreaterNPredicaton[110X  returns  the  [10XPredicaton[110X  recognizing the
  language [22Xx>N[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=GreaterNPredicaton(15, [ 1 ], [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP:=SortedStatesAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  5  2  2  3  4  6  [128X[104X
    [4X[28X  [ 1 ]  |  5  6  2  3  4  6  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 6 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 29, true);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: Y, [128X[104X
    [4X[28X otherwise if not accepted: n.[128X[104X
    [4X[28X   0: n   1: n   2: n   3: n   4: n   5: n   6: n   7: n   8: n   9: n[128X[104X
    [4X[28X  10: n  11: n  12: n  13: n  14: n  15: n  16: Y  17: Y  18: Y  19: Y[128X[104X
    [4X[28X  20: Y  21: Y  22: Y  23: Y  24: Y  25: Y  26: Y  27: Y  28: Y  29: Y[128X[104X
  [4X[32X[104X
  
  [1X2.4-13 SmallerEqualNPredicaton[101X
  
  [33X[1;0Y[29X[2XSmallerEqualNPredicaton[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function [10XSmallerEqualNPredicaton[110X returns the [10XPredicaton[110X recognizing the
  language [22Xx<=N[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=SmallerEqualNPredicaton(15, [ 1 ], [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP:=SortedStatesAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 6 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  [128X[104X
    [4X[28X------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  6  2  3  3  4  5  [128X[104X
    [4X[28X  [ 1 ]  |  6  2  2  3  4  5  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1, 3, 4, 5, 6 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 29, true);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: Y, [128X[104X
    [4X[28X otherwise if not accepted: n.[128X[104X
    [4X[28X   0: Y   1: Y   2: Y   3: Y   4: Y   5: Y   6: Y   7: Y   8: Y   9: Y[128X[104X
    [4X[28X  10: Y  11: Y  12: Y  13: Y  14: Y  15: Y  16: n  17: n  18: n  19: n[128X[104X
    [4X[28X  20: n  21: n  22: n  23: n  24: n  25: n  26: n  27: n  28: n  29: n[128X[104X
  [4X[32X[104X
  
  [1X2.4-14 SmallerNPredicaton[101X
  
  [33X[1;0Y[29X[2XSmallerNPredicaton[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XSmallerNPredicaton[110X  returns  the  [10XPredicaton[110X  recognizing the
  language [22Xx<N[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=SmallerNPredicaton(15, [ 1 ], [ 1 ]);;[127X[104X
    [4X[25Xgap>[125X [27XP:=SortedStatesAut(P);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 2 letters with 8 states, [128X[104X
    [4X[28Xthe variable position list [ 1 ] and the following transitions:[128X[104X
    [4X[28X         |  1  2  3  4  5  6  7  8  [128X[104X
    [4X[28X------------------------------------[128X[104X
    [4X[28X  [ 0 ]  |  8  2  7  4  4  5  5  7  [128X[104X
    [4X[28X  [ 1 ]  |  3  2  6  2  4  4  5  7  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1, 3, 4, 5, 6, 7, 8 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 29, true);[127X[104X
    [4X[28X If the following words are accepted by the given automaton,  then: Y, [128X[104X
    [4X[28X otherwise if not accepted: n.[128X[104X
    [4X[28X   0: Y   1: Y   2: Y   3: Y   4: Y   5: Y   6: Y   7: Y   8: Y   9: Y[128X[104X
    [4X[28X  10: Y  11: Y  12: Y  13: Y  14: Y  15: n  16: n  17: n  18: n  19: n[128X[104X
    [4X[28X  20: n  21: n  22: n  23: n  24: n  25: n  26: n  27: n  28: n  29: n[128X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [1X2.4-15 GreaterEqualPredicaton[101X
  
  [33X[1;0Y[29X[2XGreaterEqualPredicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XGreaterEqualPredicaton[110X returns the [10XPredicaton[110X recognizing the
  language [22Xx>=y[122X with the variables position list [3Xl[103X giving the positions of the
  variables [22Xx[122X and [22Xy[122X. The list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=GreaterEqualPredicaton([1,2],[1,2]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  1  1  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 2 ][128X[104X
    [4X[28X Final states:   [ 2 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 10);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: YES, [128X[104X
    [4X[28X otherwise if not accepted: no.[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  [128X[104X
    [4X[28X -------------------------------------------------[128X[104X
    [4X[28X   0 | YES no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   1 | YES YES no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   2 | YES YES YES no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   3 | YES YES YES YES no  no  no  no  no  no  no  [128X[104X
    [4X[28X   4 | YES YES YES YES YES no  no  no  no  no  no  [128X[104X
    [4X[28X   5 | YES YES YES YES YES YES no  no  no  no  no  [128X[104X
    [4X[28X   6 | YES YES YES YES YES YES YES no  no  no  no  [128X[104X
    [4X[28X   7 | YES YES YES YES YES YES YES YES no  no  no  [128X[104X
    [4X[28X   8 | YES YES YES YES YES YES YES YES YES no  no  [128X[104X
    [4X[28X   9 | YES YES YES YES YES YES YES YES YES YES no  [128X[104X
    [4X[28X  10 | YES YES YES YES YES YES YES YES YES YES YES [128X[104X
  [4X[32X[104X
  
  [1X2.4-16 GreaterPredicaton[101X
  
  [33X[1;0Y[29X[2XGreaterPredicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XGreaterPredicaton[110X  returns  the  [10XPredicaton[110X  recognizing  the
  language  [22Xx>y[122X with the variables position list [3Xl[103X giving the positions of the
  variables [22Xx[122X and [22Xy[122X. The list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=GreaterPredicaton([1,2],[1,2]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  1  1  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 2 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 10);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: YES, [128X[104X
    [4X[28X otherwise if not accepted: no.[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  [128X[104X
    [4X[28X -------------------------------------------------[128X[104X
    [4X[28X   0 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   1 | YES no  no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   2 | YES YES no  no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   3 | YES YES YES no  no  no  no  no  no  no  no  [128X[104X
    [4X[28X   4 | YES YES YES YES no  no  no  no  no  no  no  [128X[104X
    [4X[28X   5 | YES YES YES YES YES no  no  no  no  no  no  [128X[104X
    [4X[28X   6 | YES YES YES YES YES YES no  no  no  no  no  [128X[104X
    [4X[28X   7 | YES YES YES YES YES YES YES no  no  no  no  [128X[104X
    [4X[28X   8 | YES YES YES YES YES YES YES YES no  no  no  [128X[104X
    [4X[28X   9 | YES YES YES YES YES YES YES YES YES no  no  [128X[104X
    [4X[28X  10 | YES YES YES YES YES YES YES YES YES YES no  [128X[104X
  [4X[32X[104X
  
  [1X2.4-17 SmallerEqualPredicaton[101X
  
  [33X[1;0Y[29X[2XSmallerEqualPredicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XSmallerEqualPredicaton[110X returns the [10XPredicaton[110X recognizing the
  language [22Xx<=y[122X with the variables position list [3Xl[103X giving the positions of the
  variables [22Xx[122X and [22Xy[122X. The list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=SmallerEqualPredicaton([ 1, 2 ], [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  1  1  [128X[104X
    [4X[28X  [ 0, 1 ]  |  2  2  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 2 ][128X[104X
    [4X[28X Final states:   [ 2 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 10);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: YES, [128X[104X
    [4X[28X otherwise if not accepted: no.[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  [128X[104X
    [4X[28X -------------------------------------------------[128X[104X
    [4X[28X   0 | YES YES YES YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   1 | no  YES YES YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   2 | no  no  YES YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   3 | no  no  no  YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   4 | no  no  no  no  YES YES YES YES YES YES YES [128X[104X
    [4X[28X   5 | no  no  no  no  no  YES YES YES YES YES YES [128X[104X
    [4X[28X   6 | no  no  no  no  no  no  YES YES YES YES YES [128X[104X
    [4X[28X   7 | no  no  no  no  no  no  no  YES YES YES YES [128X[104X
    [4X[28X   8 | no  no  no  no  no  no  no  no  YES YES YES [128X[104X
    [4X[28X   9 | no  no  no  no  no  no  no  no  no  YES YES [128X[104X
    [4X[28X  10 | no  no  no  no  no  no  no  no  no  no  YES [128X[104X
  [4X[32X[104X
  
  [1X2.4-18 SmallerPredicaton[101X
  
  [33X[1;0Y[29X[2XSmallerPredicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XSmallerPredicaton[110X  returns  the  [10XPredicaton[110X  recognizing  the
  language  [22Xx<y[122X with the variables position list [3Xl[103X giving the positions of the
  variables [22Xx[122X and [22Xy[122X. The list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=SmallerPredicaton([ 1, 2 ], [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 2 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  [128X[104X
    [4X[28X---------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  2  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  2  [128X[104X
    [4X[28X  [ 0, 1 ]  |  1  1  [128X[104X
    [4X[28X  [ 1, 1 ]  |  1  2  [128X[104X
    [4X[28X Initial states: [ 2 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XDisplayAcceptedByPredicaton(P, 10);[127X[104X
    [4X[28X If the following words are accepted by the given automaton, then: YES, [128X[104X
    [4X[28X otherwise if not accepted: no.[128X[104X
    [4X[28X     | 0   1   2   3   4   5   6   7   8   9   10  [128X[104X
    [4X[28X -------------------------------------------------[128X[104X
    [4X[28X   0 | no  YES YES YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   1 | no  no  YES YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   2 | no  no  no  YES YES YES YES YES YES YES YES [128X[104X
    [4X[28X   3 | no  no  no  no  YES YES YES YES YES YES YES [128X[104X
    [4X[28X   4 | no  no  no  no  no  YES YES YES YES YES YES [128X[104X
    [4X[28X   5 | no  no  no  no  no  no  YES YES YES YES YES [128X[104X
    [4X[28X   6 | no  no  no  no  no  no  no  YES YES YES YES [128X[104X
    [4X[28X   7 | no  no  no  no  no  no  no  no  YES YES YES [128X[104X
    [4X[28X   8 | no  no  no  no  no  no  no  no  no  YES YES [128X[104X
    [4X[28X   9 | no  no  no  no  no  no  no  no  no  no  YES [128X[104X
    [4X[28X  10 | no  no  no  no  no  no  no  no  no  no  no  [128X[104X
  [4X[32X[104X
  
  
  [1X2.5 [33X[0;0YDetailed look at the special functions on Predicata[133X[101X
  
  [33X[0;0YThis  section  explains how the sums and products are computed and describes
  different methods. The explicit method, which computes the transition matrix
  with  a  transition formula, is more efficient than the other given methods.
  The  recursive and iterative methods explain a more naive way how to compute
  the  requested  automaton,  but are lacking in speed. Therefore they are not
  used in any further computation.[133X
  
  [1X2.5-1 AdditionPredicaton3Summands[101X
  
  [33X[1;0Y[29X[2XAdditionPredicaton3Summands[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XAdditionPredicaton4Summands[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XAdditionPredicaton5Summands[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe functions [10XAdditionPredicatonNSummands[110X returns the [10XPredicaton[110X recognizing
  the language [22Xx_1+... x_N=x_N+1[122X for [22XN=3,4,5[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicaton3Summands([ 1, 2, 3, 4 ],[ 1, 2, 3, 4 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 16 letters with 4 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3, 4 ]. >[128X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicaton4Summands([ 1, 2, 3, 4, 5 ], [ 1, 2, 3, 4, 5 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 32 letters with 5 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3, 4, 5 ]. >[128X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicaton5Summands([ 1, 2, 3, 4, 5, 6 ], [ 1, 2, 3, 4, 5, 6 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 64 letters with 6 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3, 4, 5, 6 ]. >[128X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [1X2.5-2 AdditionPredicatonNSummandsExplicit[101X
  
  [33X[1;0Y[29X[2XAdditionPredicatonNSummandsExplicit[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XAdditionPredicatonNSummandsExplicit[110X  returns  the  [10XPredicaton[110X
  recognizing  the language [22Xx_1+... x_N=x_N+1[122X. The [10XTransitionTable[110X is assigned
  explicitly  with  the  following transition property: The [22Xi[122X-th state denotes
  carry  [22Xi[122X  and there is a transition from state [22Xi[122X to state [22Xj[122X for the letter [22Xa[122X
  if  [23X\sum_{i=1}^{N}a_i  = a_{N+1} + i + 2 (j-i)[123X holds. The variables position
  list  [3Xl[103X  gives  the  positions of the variables [22Xx_i[122X and the list [3Xn[103X gives the
  resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicatonNSummandsExplicit(3, [6, 11, 2, 9], [2, 3, 6, 7, 9, 11]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 64 letters with 4 states [128X[104X
    [4X[28Xand the variable position list [ 2, 3, 6, 7, 9, 11 ]. >[128X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicatonNSummandsExplicit(11, [ 1..12 ], [ 1..12 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 4096 letters with 12 states [128X[104X
    [4X[28Xand the variable position list [128X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]. >[128X[104X
  [4X[32X[104X
  
  [1X2.5-3 AdditionPredicatonNSummandsIterative[101X
  
  [33X[1;0Y[29X[2XAdditionPredicatonNSummandsIterative[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XAdditionPredicatonNSummandsIterative[110X  returns  the [10XPredicaton[110X
  recognizing  the  language  [22Xx_1+...  x_N=x_N+1[122X. The [10XPredicaton[110X is created by
  intersection  [22X(N-1)[122X-times  the  simple  automaton  recognizing [22Xx+y=z[122X. Due to
  intersecting  and minimizing that often, this function shouldn't be used for
  large [22XN[122X (for example [22XN>10[122X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicatonNSummandsIterative(7, [ 1..8 ], [ 1..8 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 256 letters with 8 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3, 4, 5, 6, 7, 8 ]. >[128X[104X
  [4X[32X[104X
  
  [1X2.5-4 AdditionPredicatonNSummandsRecursive[101X
  
  [33X[1;0Y[29X[2XAdditionPredicatonNSummandsRecursive[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XAdditionPredicatonNSummandsRecursive[110X  returns  the [10XPredicaton[110X
  recognizing  the  language  [22Xx_1+...  x_N=x_N+1[122X.  The  [10XPredicaton[110X  is created
  recursively  splitting  the  variable  position  list until a length of 3 is
  reached, where the base cases are the simple automaton recognizing [22Xx+y=z[122X. It
  is  slightly  faster  than  [2XAdditionPredicatonNSummandsIterative[102X ([14X2.5-3[114X) but
  nevertheless it shouldn't be used for large [22XN[122X (for example [22XN>10[122X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=AdditionPredicatonNSummandsRecursive(7, [ 1..8 ], [ 1..8 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 256 letters with 8 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2, 3, 4, 5, 6, 7, 8 ]. >[128X[104X
  [4X[32X[104X
  
  [1X2.5-5 TimesNPredicatonExplicit[101X
  
  [33X[1;0Y[29X[2XTimesNPredicatonExplicit[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe function [10XTimesNPredicatonExplicit[110X returns the [10XPredicaton[110X recognizing the
  language  [22XNâ‹…  x=y[122X.  The  [10XTransitionTable[110X  is  assigned  explicitly  with the
  following transition property: The [22Xi[122X-th state denotes carry [22Xi[122X and there is a
  transition from state [22Xi[122X to state [22Xj[122X for the letter [22Xa[122X if [23XN \cdot a_1 = a_2 + i
  +  2  (j  -  i).[123X  The  variables  position list [3Xl[103X gives the positions of the
  variables [22Xx_i[122X and the list [3Xn[103X gives the resized variable position list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=TimesNPredicatonExplicit(1000, [ 1, 2 ], [ 1, 2 ]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 4 letters with 1001 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2 ]. >[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedByPredicaton(P, [ 1, 1000 ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedByPredicaton(P, [ 2, 2000 ]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAcceptedByPredicaton(P, [ 3, 3000 ]);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.5-6 TimesNPredicatonRecursive[101X
  
  [33X[1;0Y[29X[2XTimesNPredicatonRecursive[102X( [3XN[103X, [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  function  [10XTimesNPredicatonRecursive[110X  returns the [10XPredicaton[110X recognizing
  the   language   [22XN   â‹…   x=y[122X.  It  splits  the  the  multiplication  into  a
  multiplications of [22XN_1[122X and [22XN_2[122X, where [22XN = N_1 â‹… N_2[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=TimesNPredicatonRecursive(100, [1,2],[1,2]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 4 letters with 101 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2 ]. >[128X[104X
    [4X[25Xgap>[125X [27XP:=TimesNPredicatonRecursive(1000, [1,2],[1,2]);[127X[104X
    [4X[28X< Predicaton: deterministic finite automaton on 4 letters with 1001 states [128X[104X
    [4X[28Xand the variable position list [ 1, 2 ]. >[128X[104X
  [4X[32X[104X
  
  [1X2.5-7 Times2Predicaton[101X
  
  [33X[1;0Y[29X[2XTimes2Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes3Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes4Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes5Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes6Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes7Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes8Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  [33X[1;0Y[29X[2XTimes9Predicaton[102X( [3Xl[103X, [3Xn[103X ) [32X function[133X
  
  [33X[0;0YThe  functions [10XTimes2Predicaton[110X, [10XTimes3Predicaton[110X,... returns the [10XPredicaton[110X
  recognizing the language [22XN â‹… x=y[122X for [22XN=2,...,9[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XP:=Times2Predicaton([ 1, 2 ], [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 3 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  [128X[104X
    [4X[28X------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  3  3  [128X[104X
    [4X[28X  [ 1, 0 ]  |  2  3  3  [128X[104X
    [4X[28X  [ 0, 1 ]  |  3  1  3  [128X[104X
    [4X[28X  [ 1, 1 ]  |  3  2  3  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
    [4X[25Xgap>[125X [27XP:=Times3Predicaton([ 1, 2 ], [ 1, 2 ]);;[127X[104X
    [4X[25Xgap>[125X [27XDisplay(P);[127X[104X
    [4X[28XPredicaton: deterministic finite automaton on 4 letters with 4 states, [128X[104X
    [4X[28Xthe variable position list [ 1, 2 ] and the following transitions:[128X[104X
    [4X[28X            |  1  2  3  4  [128X[104X
    [4X[28X---------------------------[128X[104X
    [4X[28X  [ 0, 0 ]  |  1  4  2  4  [128X[104X
    [4X[28X  [ 1, 0 ]  |  4  3  4  4  [128X[104X
    [4X[28X  [ 0, 1 ]  |  4  1  4  4  [128X[104X
    [4X[28X  [ 1, 1 ]  |  2  4  3  4  [128X[104X
    [4X[28X Initial states: [ 1 ][128X[104X
    [4X[28X Final states:   [ 1 ][128X[104X
  [4X[32X[104X
  
